{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$id": "root",
  "title": "JSON schema for Travis CI configuration files",
  "description": "The root node of your build config.",
  "allOf": [
    {
      "type": "object",
      "properties": {
        "language": {
          "$ref": "#/definitions/type/language",
          "defaults": [
            {
              "value": "ruby",
              "except": {
                "os": [
                  "osx"
                ]
              }
            },
            {
              "value": "objective-c",
              "only": {
                "os": [
                  "osx"
                ]
              }
            }
          ]
        },
        "os": {
          "$ref": "#/definitions/type/oss",
          "defaults": [
            {
              "value": "linux",
              "except": {
                "language": [
                  "objective-c"
                ]
              }
            },
            {
              "value": "osx",
              "only": {
                "language": [
                  "objective-c"
                ]
              }
            }
          ],
          "flags": [
            "expand"
          ]
        },
        "dist": {
          "$ref": "#/definitions/type/dist",
          "defaults": [
            {
              "value": "xenial",
              "only": {
                "os": [
                  "linux",
                  "linux-ppc64le"
                ]
              }
            }
          ]
        },
        "arch": {
          "$ref": "#/definitions/type/archs",
          "flags": [
            "expand"
          ]
        },
        "stack": {
          "$ref": "#/definitions/type/stack"
        },
        "sudo": {
          "$ref": "#/definitions/type/sudo"
        },
        "import": {
          "$ref": "#/definitions/type/imports"
        },
        "env": {
          "$ref": "#/definitions/type/env"
        },
        "compiler": {
          "$ref": "#/definitions/type/compilers",
          "flags": [
            "expand"
          ]
        },
        "osx_image": {
          "$ref": "#/definitions/type/osx_images",
          "flags": [
            "expand"
          ]
        },
        "stages": {
          "$ref": "#/definitions/type/stages"
        },
        "jobs": {
          "$ref": "#/definitions/type/jobs",
          "aliases": [
            "matrix"
          ]
        },
        "notifications": {
          "$ref": "#/definitions/type/notifications"
        },
        "version": {
          "$ref": "#/definitions/type/version"
        },
        "vm": {
          "$ref": "#/definitions/type/vm",
          "defaults": [
            {
              "size": "medium"
            }
          ]
        },
        "conditions": {
          "$ref": "#/definitions/type/conditions"
        },
        "filter_secrets": {
          "type": "boolean",
          "flags": [
            "internal"
          ],
          "summary": "Whether to filter secrets from the log output"
        },
        "trace": {
          "type": "boolean",
          "flags": [
            "internal"
          ],
          "summary": "Whether to trace the build script"
        },
        "perforce_test_path": {
          "$ref": "#/definitions/type/perforce_test_path"
        },
        "vault": {
          "$ref": "#/definitions/type/vault"
        }
      },
      "see": {
        "Job lifecycle": "https://docs.travis-ci.com/user/job-lifecycle/"
      }
    },
    {
      "$ref": "#/definitions/type/languages"
    },
    {
      "$ref": "#/definitions/type/job"
    }
  ],
  "see": {
    "Job lifecycle": "https://docs.travis-ci.com/user/job-lifecycle/"
  },
  "definitions": {
    "type": {
      "addons": {
        "$id": "addons",
        "title": "Addons",
        "description": "Build addons enable additional built-in functionality, such as\ninstalling build dependencies, system setup tasks, and integrations\nwith external services.",
        "type": "object",
        "properties": {
          "apt": {
            "$ref": "#/definitions/addon/apt"
          },
          "apt_packages": {
            "$ref": "#/definitions/type/strs",
            "summary": "APT package names to install"
          },
          "artifacts": {
            "$ref": "#/definitions/addon/artifacts"
          },
          "browserstack": {
            "$ref": "#/definitions/addon/browserstack"
          },
          "chrome": {
            "type": "string",
            "enum": [
              "stable",
              "beta"
            ],
            "downcase": true,
            "summary": "Chrome version to use"
          },
          "code_climate": {
            "$ref": "#/definitions/addon/code_climate"
          },
          "coverity_scan": {
            "$ref": "#/definitions/addon/coverity_scan"
          },
          "homebrew": {
            "$ref": "#/definitions/addon/homebrew"
          },
          "hostname": {
            "type": "string",
            "summary": "Hostname to set on the build environment"
          },
          "hosts": {
            "$ref": "#/definitions/type/strs",
            "summary": "Hosts to add to /etc/hosts"
          },
          "jwt": {
            "$ref": "#/definitions/addon/jwts"
          },
          "sauce_connect": {
            "$ref": "#/definitions/addon/sauce_connect"
          },
          "pkg": {
            "$ref": "#/definitions/addon/pkg"
          },
          "srcclr": {
            "anyOf": [
              {
                "type": "object",
                "normal": true
              },
              {
                "type": "boolean",
                "normal": true
              }
            ],
            "summary": "SourceClear settings"
          },
          "snaps": {
            "$ref": "#/definitions/addon/snaps"
          },
          "sonarcloud": {
            "$ref": "#/definitions/addon/sonarcloud"
          },
          "ssh_known_hosts": {
            "$ref": "#/definitions/type/secures",
            "strict": false,
            "summary": "Hosts to add to ~/.ssh/known_hosts",
            "see": {
              "Adding to SSH Known Hosts": "https://docs.travis-ci.com/user/ssh-known-hosts/"
            }
          },
          "firefox": {
            "type": "string",
            "summary": "Firefox version to use",
            "example": "68.0b1"
          },
          "mariadb": {
            "type": "string",
            "summary": "MariaDB version to use"
          },
          "postgresql": {
            "type": "string",
            "aliases": [
              "postgres"
            ],
            "summary": "Postgres version to use"
          },
          "rethinkdb": {
            "type": "string",
            "summary": "RethinkDB version to use"
          },
          "deploy": {
            "$ref": "#/definitions/type/deploys",
            "flags": [
              "internal"
            ]
          },
          "sbom": {
            "$ref": "#/definitions/addon/sbom"
          }
        },
        "additionalProperties": false,
        "summary": "Build addons to activate"
      },
      "arch": {
        "$id": "arch",
        "title": "Architecture",
        "description": "The architecture that will be selected for the build environment.",
        "type": "string",
        "summary": "Build environment architecture",
        "downcase": true,
        "only": {
          "os": [
            "linux"
          ]
        },
        "enum": [
          "amd64",
          "arm64",
          "arm64-graviton2",
          "ppc64le",
          "i386",
          "s390x"
        ],
        "values": {
          "amd64": {
            "aliases": [
              "x86_64",
              "x64"
            ]
          },
          "ppc64le": {
            "aliases": [
              "power",
              "ppc",
              "ppc64"
            ]
          },
          "i386": {
            "aliases": [
              "x86"
            ]
          }
        }
      },
      "archs": {
        "$id": "archs",
        "title": "Architectures",
        "description": "The architectures that will be selected for the build environments.",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/arch"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/arch"
          }
        ],
        "summary": "Build environment architectures"
      },
      "branches": {
        "$id": "branches",
        "title": "Branches",
        "description": "Include or exclude branches for your build to be run on.\n\nThis is a legacy setting, use the more powerful condition (`if`) to define branches for your build to be run on.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "only": {
                "$ref": "#/definitions/type/strs",
                "summary": "Branches to include",
                "example": "master"
              },
              "except": {
                "$ref": "#/definitions/type/strs",
                "aliases": [
                  "exclude"
                ],
                "summary": "Branches to exclude",
                "example": "develop"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "only"
            },
            "aliases": [
              "branch"
            ]
          },
          {
            "$ref": "#/definitions/type/strs",
            "example": "master"
          }
        ],
        "summary": "Include or exclude branches from being built",
        "normal": true
      },
      "cache": {
        "$id": "cache",
        "title": "Cache",
        "description": "Activates caching content that does not often change in order to speed up the build process.\n\nThere are built-in caching strategies for `apt`, `bundler`, `cargo`, `ccache`, `cocoapods`, `npm`, `packages`, `pip`, `yarn`.\nFor other scenarios the generic `directory` option can be used.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "directories": {
                "$ref": "#/definitions/type/strs",
                "summary": "Generic directory caching strategy",
                "example": "./path"
              },
              "apt": {
                "type": "boolean",
                "summary": "Use the apt caching strategy"
              },
              "bundler": {
                "type": "boolean",
                "summary": "Use the bundler caching strategy"
              },
              "cargo": {
                "type": "boolean",
                "summary": "Use the cargo caching strategy"
              },
              "ccache": {
                "type": "boolean",
                "summary": "Use the ccache caching strategy"
              },
              "cocoapods": {
                "type": "boolean",
                "summary": "Use the cocoapods caching strategy"
              },
              "npm": {
                "type": "boolean",
                "summary": "Use the npm caching strategy"
              },
              "packages": {
                "type": "boolean",
                "summary": "Use the packages caching strategy"
              },
              "pip": {
                "type": "boolean",
                "summary": "Use the pip caching strategy"
              },
              "yarn": {
                "type": "boolean",
                "summary": "Use the yarn caching strategy"
              },
              "timeout": {
                "type": "number",
                "summary": "Timeout for the cache tooling"
              },
              "edge": {
                "type": "boolean",
                "summary": "Use an edge version of the cache tooling"
              },
              "branch": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "cache"
              }
            ]
          },
          {
            "type": "boolean",
            "enum": [
              false
            ],
            "normal": true
          }
        ],
        "summary": "Cache settings to speed up the build",
        "see": {
          "Caching Dependencies and Directories": "https://docs.travis-ci.com/user/caching/"
        }
      },
      "compilers": {
        "$id": "compilers",
        "title": "Compilers",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "example": "gcc",
              "only": {
                "language": [
                  "c",
                  "cpp"
                ]
              }
            },
            "normal": true
          },
          {
            "type": "string",
            "example": "gcc",
            "only": {
              "language": [
                "c",
                "cpp"
              ]
            }
          }
        ],
        "summary": "Compilers to set up",
        "see": {
          "Choosing compilers to test against": "https://docs.travis-ci.com/user/languages/c/#choosing-compilers-to-test-against"
        }
      },
      "condition": {
        "$id": "condition",
        "title": "If",
        "description": "Include or exclude builds, stages, jobs, imports, and notifications by specifying\nconditions in your build configuration. These are evaluated when your build is\nbeing configured.",
        "type": "string",
        "summary": "Condition to determine if a build, stage, or job should be run, a config source imported, or a notification sent",
        "example": "branch = master",
        "see": {
          "Conditional Builds, Stages, and Jobs": "https://docs.travis-ci.com/user/conditional-builds-stages-jobs/",
          "Conditional Notifications": "TBD"
        }
      },
      "conditions": {
        "$id": "conditions",
        "title": "Conditions",
        "type": "string",
        "summary": "Conditions support version",
        "enum": [
          "v0",
          "v1"
        ],
        "flags": [
          "internal"
        ]
      },
      "deploys": {
        "$id": "deploys",
        "title": "Deployments",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/deploy/providers"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/deploy/providers"
          }
        ],
        "summary": "Deployment target configurations",
        "see": {
          "Deployment (v2)": "https://docs.travis-ci.com/user/deployment-v2"
        }
      },
      "dist": {
        "$id": "dist",
        "title": "Distribution",
        "type": "string",
        "summary": "Build environment distribution",
        "see": {
          "Virtualization environments": "https://docs.travis-ci.com/user/reference/overview/#virtualization-environments"
        },
        "downcase": true,
        "enum": [
          "trusty",
          "precise",
          "xenial",
          "bionic",
          "focal",
          "jammy",
          "server-2016",
          "rhel8"
        ],
        "values": {
          "trusty": {
            "only": {
              "os": [
                "linux"
              ]
            }
          },
          "precise": {
            "only": {
              "os": [
                "linux"
              ]
            }
          },
          "xenial": {
            "only": {
              "os": [
                "linux",
                "linux-ppc64le"
              ]
            }
          },
          "bionic": {
            "only": {
              "os": [
                "linux"
              ]
            }
          },
          "focal": {
            "only": {
              "os": [
                "linux"
              ]
            }
          },
          "jammy": {
            "only": {
              "os": [
                "linux"
              ]
            }
          },
          "server-2016": {
            "only": {
              "os": [
                "windows"
              ]
            },
            "edge": true
          },
          "rhel8": {
            "only": {
              "os": [
                "linux"
              ]
            }
          }
        }
      },
      "env": {
        "$id": "env",
        "title": "Env",
        "description": "The key `env` defines env vars that will be defined in the build\nenvironment.\n\nEnv vars can be specified as global or job vars. Global vars will\nbe defined on every job in the build's job matrix. Job vars will\nexpand the build matrix, i.e. create one additional job per entry.\n\nEnv vars can be given either as strings or maps. If given as a\nstring they can contain multiple key/value pairs.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "global": {
                "$ref": "#/definitions/type/env_vars",
                "summary": "Global environment variables to be defined on all jobs"
              },
              "jobs": {
                "$ref": "#/definitions/type/env_vars",
                "aliases": [
                  "matrix"
                ],
                "summary": "Environment variables that expand the build matrix (creating one job per entry)",
                "flags": [
                  "expand"
                ]
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "jobs"
            }
          },
          {
            "$ref": "#/definitions/type/env_vars"
          }
        ],
        "summary": "Environment variables to set up",
        "see": {
          "Environment Variables": "https://docs.travis-ci.com/user/environment-variables/",
          "Build Matrix": "https://docs.travis-ci.com/user/build-matrix/"
        }
      },
      "env_var": {
        "$id": "env_var",
        "title": "Env Var",
        "anyOf": [
          {
            "type": "object",
            "patternProperties": {
              "^(?!global|jobs|matrix)": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "#/definitions/type/secure"
                  }
                ]
              }
            },
            "example": {
              "FOO": "foo"
            },
            "normal": true
          },
          {
            "type": "object",
            "properties": {
              "secure": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "maxProperties": 1
          },
          {
            "type": "string",
            "pattern": "^[^=]+=[^=]*$",
            "example": "FOO=foo"
          }
        ]
      },
      "env_vars": {
        "$id": "env_vars",
        "title": "Env Vars",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/env_var"
            },
            "normal": true,
            "changes": [
              {
                "change": "env_vars"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/env_var"
          }
        ],
        "summary": "Environment variables to set up"
      },
      "git": {
        "$id": "git",
        "title": "Git",
        "description": "These settings can be used in order to customize how the repository\nis cloned with Git.",
        "type": "object",
        "properties": {
          "strategy": {
            "type": "string",
            "enum": [
              "clone",
              "tarball"
            ],
            "summary": "Strategy to use for fetching commits"
          },
          "depth": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "summary": "Number of commmits to fetch, or false to clone all commits"
          },
          "quiet": {
            "type": "boolean",
            "summary": "Silence git clone log output"
          },
          "submodules": {
            "type": "boolean",
            "summary": "Avoid cloning submodules if given false"
          },
          "symlinks": {
            "type": "boolean",
            "summary": "Set core.symlinks option to the given value"
          },
          "submodules_depth": {
            "type": "number",
            "summary": "Number of commits to fetch for submodules"
          },
          "lfs_skip_smudge": {
            "type": "boolean",
            "summary": "Skip fetching the git-lfs files during the initial git clone"
          },
          "sparse_checkout": {
            "type": "string",
            "summary": "Populate the working directory sparsely"
          },
          "autocrlf": {
            "anyOf": [
              {
                "type": "boolean",
                "enum": [
                  true,
                  false
                ]
              },
              {
                "type": "string",
                "enum": [
                  "input"
                ]
              }
            ],
            "summary": "Specify handling of line endings when cloning repository"
          }
        },
        "additionalProperties": false,
        "summary": "Git settings",
        "see": {
          "Customizing the Build": "https://docs.travis-ci.com/user/customizing-the-build/"
        }
      },
      "group": {
        "$id": "group",
        "title": "Group",
        "type": "string",
        "summary": "Build environment group",
        "flags": [
          "internal"
        ]
      },
      "import": {
        "$id": "import",
        "title": "Import",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "source": {
                "$ref": "#/definitions/import/import_template",
                "summary": "The source to import build config from",
                "example": "./import.yml@v1"
              },
              "mode": {
                "type": "string",
                "enum": [
                  "merge",
                  "deep_merge",
                  "deep_merge_append",
                  "deep_merge_prepend"
                ],
                "summary": "How to merge the imported config into the target config (defaults to deep_merge_append)"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "source"
            }
          },
          {
            "$ref": "#/definitions/import/import_template",
            "example": "./import.yml@v1"
          }
        ],
        "normal": true
      },
      "imports": {
        "$id": "imports",
        "title": "Imports",
        "description": "Import YAML config snippets that can be shared across repositories.",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/import"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/import"
          }
        ],
        "summary": "Build configuration imports",
        "see": {
          "Build Config Imports": "https://docs.travis-ci.com/user/build-config-imports/"
        }
      },
      "jdks": {
        "$id": "jdks",
        "title": "Jdks",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "normal": true
          },
          {
            "type": "string"
          }
        ],
        "summary": "JDK versions"
      },
      "job": {
        "$id": "job",
        "title": "Job",
        "type": "object",
        "properties": {
          "virt": {
            "$ref": "#/definitions/type/virt"
          },
          "addons": {
            "$ref": "#/definitions/type/addons"
          },
          "branches": {
            "$ref": "#/definitions/type/branches"
          },
          "cache": {
            "$ref": "#/definitions/type/cache"
          },
          "deploy": {
            "$ref": "#/definitions/type/deploys"
          },
          "git": {
            "$ref": "#/definitions/type/git"
          },
          "if": {
            "$ref": "#/definitions/type/condition"
          },
          "services": {
            "$ref": "#/definitions/type/services"
          },
          "group": {
            "$ref": "#/definitions/type/group"
          },
          "workspaces": {
            "$ref": "#/definitions/type/workspaces"
          },
          "keys": {
            "$ref": "#/definitions/type/keys"
          },
          "before_install": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run before the install stage"
          },
          "install": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run at the install stage"
          },
          "before_script": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run before the script stage"
          },
          "script": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run at the script stage"
          },
          "before_cache": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run before storing a build cache"
          },
          "after_success": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run after a successful script stage"
          },
          "after_failure": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run after a failing script stage"
          },
          "before_deploy": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run before the deploy stage"
          },
          "after_deploy": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run after the deploy stage"
          },
          "after_script": {
            "$ref": "#/definitions/type/strs",
            "summary": "Scripts to run as the last stage"
          }
        }
      },
      "jobs": {
        "$id": "jobs",
        "title": "Job Matrix",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "include": {
                "$ref": "#/definitions/type/jobs_includes",
                "summary": "Jobs to include to the build matrix"
              },
              "exclude": {
                "$ref": "#/definitions/type/jobs_excludes",
                "summary": "Attributes of jobs to exclude from the build matrix"
              },
              "allow_failures": {
                "$ref": "#/definitions/type/jobs_allow_failures",
                "aliases": [
                  "allowed_failures"
                ],
                "summary": "Attributes of jobs that are allowed to fail"
              },
              "fast_finish": {
                "type": "boolean",
                "aliases": [
                  "fast_failure"
                ],
                "summary": "Allow the build to fail fast"
              }
            },
            "additionalProperties": false,
            "see": {
              "Build Matrix": "https://docs.travis-ci.com/user/build-matrix/",
              "Customizing the build": "https://docs.travis-ci.com/user/customizing-the-build#build-matrix"
            },
            "normal": true,
            "aliases": [
              "matrix"
            ],
            "prefix": {
              "key": "include"
            }
          },
          {
            "$ref": "#/definitions/type/jobs_includes"
          }
        ],
        "summary": "Build matrix definitions",
        "see": {
          "Build Matrix": "https://docs.travis-ci.com/user/build-matrix/",
          "Customizing the build": "https://docs.travis-ci.com/user/customizing-the-build#build-matrix"
        },
        "normal": true
      },
      "jobs_allow_failure": {
        "$id": "jobs_allow_failure",
        "title": "Job Matrix Allow Failure",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/definitions/type/language"
              },
              "os": {
                "$ref": "#/definitions/type/os"
              },
              "dist": {
                "$ref": "#/definitions/type/dist"
              },
              "arch": {
                "$ref": "#/definitions/type/arch"
              },
              "osx_image": {
                "type": "string",
                "summary": "OSX image to use for the build environment",
                "only": {
                  "os": [
                    "osx"
                  ]
                }
              },
              "sudo": {
                "$ref": "#/definitions/type/sudo"
              },
              "vm": {
                "$ref": "#/definitions/type/vm"
              },
              "env": {
                "$ref": "#/definitions/type/env_vars"
              },
              "compiler": {
                "type": "string",
                "example": "gcc",
                "only": {
                  "language": [
                    "c",
                    "cpp"
                  ]
                }
              },
              "branches": {
                "$ref": "#/definitions/type/branches"
              },
              "name": {
                "type": "string",
                "flags": [
                  "unique"
                ]
              },
              "stage": {
                "type": "string"
              },
              "branch": {
                "type": "string",
                "deprecated": "use conditional allow_failures using :if"
              }
            },
            "title": "Job Matrix Allow Failure",
            "see": {
              "Jobs that are allowed to fail": "https://docs.travis-ci.com/user/customizing-the-build#jobs-that-are-allowed-to-fail",
              "Conditionally allowing jobs to fail": "https://docs.travis-ci.com/user/conditional-builds-stages-jobs#conditionally-allowing-jobs-to-fail"
            }
          },
          {
            "$ref": "#/definitions/type/support"
          },
          {
            "$ref": "#/definitions/type/job"
          }
        ],
        "see": {
          "Jobs that are allowed to fail": "https://docs.travis-ci.com/user/customizing-the-build#jobs-that-are-allowed-to-fail",
          "Conditionally allowing jobs to fail": "https://docs.travis-ci.com/user/conditional-builds-stages-jobs#conditionally-allowing-jobs-to-fail"
        }
      },
      "jobs_allow_failures": {
        "$id": "jobs_allow_failures",
        "title": "Job Matrix Allow Failures",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/jobs_allow_failure"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/jobs_allow_failure"
          }
        ]
      },
      "jobs_exclude": {
        "$id": "jobs_exclude",
        "title": "Job Matrix Exclude",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/definitions/type/language"
              },
              "os": {
                "$ref": "#/definitions/type/os"
              },
              "dist": {
                "$ref": "#/definitions/type/dist"
              },
              "arch": {
                "$ref": "#/definitions/type/arch"
              },
              "osx_image": {
                "type": "string",
                "summary": "OSX image to use for the build environment",
                "only": {
                  "os": [
                    "osx"
                  ]
                }
              },
              "sudo": {
                "$ref": "#/definitions/type/sudo"
              },
              "vm": {
                "$ref": "#/definitions/type/vm"
              },
              "env": {
                "$ref": "#/definitions/type/env_vars"
              },
              "compiler": {
                "type": "string",
                "example": "gcc",
                "only": {
                  "language": [
                    "c",
                    "cpp"
                  ]
                }
              },
              "branches": {
                "$ref": "#/definitions/type/branches"
              },
              "name": {
                "type": "string",
                "flags": [
                  "unique"
                ]
              },
              "stage": {
                "type": "string"
              }
            },
            "title": "Job Matrix Exclude"
          },
          {
            "$ref": "#/definitions/type/support"
          },
          {
            "$ref": "#/definitions/type/job"
          }
        ]
      },
      "jobs_excludes": {
        "$id": "jobs_excludes",
        "title": "Job Matrix Excludes",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/jobs_exclude"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/jobs_exclude"
          }
        ]
      },
      "jobs_include": {
        "$id": "jobs_include",
        "title": "Job Matrix Includes",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/definitions/type/language"
              },
              "os": {
                "$ref": "#/definitions/type/os"
              },
              "dist": {
                "$ref": "#/definitions/type/dist"
              },
              "arch": {
                "$ref": "#/definitions/type/arch"
              },
              "osx_image": {
                "type": "string",
                "summary": "OSX image to use for the build environment",
                "only": {
                  "os": [
                    "osx"
                  ]
                }
              },
              "sudo": {
                "$ref": "#/definitions/type/sudo"
              },
              "vm": {
                "$ref": "#/definitions/type/vm"
              },
              "env": {
                "$ref": "#/definitions/type/env_vars"
              },
              "compiler": {
                "type": "string",
                "example": "gcc",
                "only": {
                  "language": [
                    "c",
                    "cpp"
                  ]
                }
              },
              "branches": {
                "$ref": "#/definitions/type/branches"
              },
              "name": {
                "type": "string",
                "flags": [
                  "unique"
                ]
              },
              "stage": {
                "type": "string"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "vault": {
                "$ref": "#/definitions/type/vault"
              }
            },
            "title": "Job Matrix Includes",
            "aliases": [
              "jobs"
            ]
          },
          {
            "$ref": "#/definitions/type/support"
          },
          {
            "$ref": "#/definitions/type/job"
          }
        ]
      },
      "jobs_includes": {
        "$id": "jobs_includes",
        "title": "Job Matrix Includes",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/jobs_include"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/jobs_include"
          }
        ]
      },
      "keys": {
        "$id": "keys",
        "title": "Keys",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "summary": "Custom key"
            },
            "normal": true
          },
          {
            "type": "string"
          }
        ],
        "summary": "Custom keys to use"
      },
      "language": {
        "$id": "language",
        "title": "Language",
        "description": "The key `language` selects the language support used for the build.\n\nLanguage supports define additional root level keys, e.g. for selecting\nthe language runtime version. Some of these keys will expand additional\njobs in the build matrix, such as the key `python` on Python language\nsupport.",
        "type": "string",
        "summary": "Language support to enable",
        "see": {
          "Languages": "https://docs.travis-ci.com/user/languages/",
          "Build Matrix": "https://docs.travis-ci.com/user/build-matrix/"
        },
        "example": "ruby",
        "downcase": true,
        "enum": [
          "android",
          "c",
          "clojure",
          "cpp",
          "crystal",
          "csharp",
          "d",
          "dart",
          "elixir",
          "elm",
          "erlang",
          "generic",
          "go",
          "groovy",
          "hack",
          "haskell",
          "haxe",
          "java",
          "julia",
          "matlab",
          "nix",
          "node_js",
          "perl",
          "perl6",
          "php",
          "python",
          "r",
          "ruby",
          "objective-c",
          "rust",
          "scala",
          "shell",
          "smalltalk",
          "__connie__",
          "__amethyst__",
          "__garnet__",
          "__stevonnie__",
          "__opal__",
          "__sardonyx__",
          "__onion__",
          "__cookiecat__"
        ],
        "values": {
          "cpp": {
            "aliases": [
              "c++"
            ]
          },
          "go": {
            "aliases": [
              "golang"
            ]
          },
          "java": {
            "aliases": [
              "jvm"
            ]
          },
          "node_js": {
            "aliases": [
              "javascript",
              "js",
              "node"
            ]
          },
          "objective-c": {
            "aliases": [
              "objective_c",
              "swift"
            ]
          },
          "shell": {
            "aliases": [
              "bash",
              "minimal",
              "sh"
            ]
          },
          "__connie__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__amethyst__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__garnet__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__stevonnie__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__opal__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__sardonyx__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__onion__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          },
          "__cookiecat__": {
            "flags": [
              "internal"
            ],
            "deprecated": "experimental stack language"
          }
        }
      },
      "languages": {
        "$id": "languages",
        "title": "Languages",
        "anyOf": [
          {
            "$ref": "#/definitions/language/android"
          },
          {
            "$ref": "#/definitions/language/c"
          },
          {
            "$ref": "#/definitions/language/clojure"
          },
          {
            "$ref": "#/definitions/language/cpp"
          },
          {
            "$ref": "#/definitions/language/crystal"
          },
          {
            "$ref": "#/definitions/language/csharp"
          },
          {
            "$ref": "#/definitions/language/d"
          },
          {
            "$ref": "#/definitions/language/dart"
          },
          {
            "$ref": "#/definitions/language/elixir"
          },
          {
            "$ref": "#/definitions/language/elm"
          },
          {
            "$ref": "#/definitions/language/erlang"
          },
          {
            "$ref": "#/definitions/language/generic"
          },
          {
            "$ref": "#/definitions/language/go"
          },
          {
            "$ref": "#/definitions/language/groovy"
          },
          {
            "$ref": "#/definitions/language/hack"
          },
          {
            "$ref": "#/definitions/language/haskell"
          },
          {
            "$ref": "#/definitions/language/haxe"
          },
          {
            "$ref": "#/definitions/language/java"
          },
          {
            "$ref": "#/definitions/language/julia"
          },
          {
            "$ref": "#/definitions/language/matlab"
          },
          {
            "$ref": "#/definitions/language/nix"
          },
          {
            "$ref": "#/definitions/language/node_js"
          },
          {
            "$ref": "#/definitions/language/perl"
          },
          {
            "$ref": "#/definitions/language/perl6"
          },
          {
            "$ref": "#/definitions/language/php"
          },
          {
            "$ref": "#/definitions/language/python"
          },
          {
            "$ref": "#/definitions/language/r"
          },
          {
            "$ref": "#/definitions/language/ruby"
          },
          {
            "$ref": "#/definitions/language/objective-c"
          },
          {
            "$ref": "#/definitions/language/rust"
          },
          {
            "$ref": "#/definitions/language/scala"
          },
          {
            "$ref": "#/definitions/language/shell"
          },
          {
            "$ref": "#/definitions/language/smalltalk"
          },
          {
            "$ref": "#/definitions/language/__connie__"
          },
          {
            "$ref": "#/definitions/language/__amethyst__"
          },
          {
            "$ref": "#/definitions/language/__garnet__"
          },
          {
            "$ref": "#/definitions/language/__stevonnie__"
          },
          {
            "$ref": "#/definitions/language/__opal__"
          },
          {
            "$ref": "#/definitions/language/__sardonyx__"
          },
          {
            "$ref": "#/definitions/language/__onion__"
          },
          {
            "$ref": "#/definitions/language/__cookiecat__"
          }
        ],
        "normal": true
      },
      "notifications": {
        "$id": "notifications",
        "title": "Notifications",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "campfire": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/campfire"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/campfire"
                  }
                ],
                "summary": "Campfire notification settings"
              },
              "email": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/email"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/email"
                  }
                ],
                "summary": "Email notification settings"
              },
              "flowdock": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/flowdock"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/flowdock"
                  }
                ],
                "summary": "Flowdock notification settings"
              },
              "hipchat": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/hipchat"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/hipchat"
                  }
                ],
                "summary": "Hipchat notification settings"
              },
              "irc": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/irc"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/irc"
                  }
                ],
                "summary": "IRC notification settings"
              },
              "pushover": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/pushover"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/pushover"
                  }
                ],
                "summary": "Pushover notification settings"
              },
              "slack": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/slack"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/slack"
                  }
                ],
                "summary": "Slack notification settings"
              },
              "webhooks": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/notification/webhooks"
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/notification/webhooks"
                  }
                ],
                "summary": "Webhook notification settings"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "email"
            },
            "changes": [
              {
                "change": "inherit",
                "keys": [
                  "on_success",
                  "on_failure"
                ]
              }
            ]
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/notification/email"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/notification/email"
          }
        ],
        "summary": "Notification targets to notify on build results",
        "normal": true
      },
      "os": {
        "$id": "os",
        "title": "Os",
        "type": "string",
        "downcase": true,
        "enum": [
          "linux",
          "osx",
          "windows",
          "freebsd",
          "linux-ppc64le"
        ],
        "values": {
          "linux": {
            "aliases": [
              "ubuntu"
            ],
            "except": {
              "language": [
                "objective-c"
              ]
            }
          },
          "osx": {
            "aliases": [
              "mac",
              "macos",
              "macosx",
              "ios"
            ]
          },
          "windows": {
            "aliases": [
              "win"
            ],
            "except": {
              "language": [
                "objective-c"
              ]
            }
          },
          "freebsd": {
            "aliases": [
              "bsd"
            ],
            "except": {
              "language": [
                "objective-c"
              ]
            }
          }
        }
      },
      "oss": {
        "$id": "oss",
        "title": "Operating systems",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/os"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/os"
          }
        ],
        "summary": "Build environment operating systems",
        "see": {
          "Build Environment Overview": "https://docs.travis-ci.com/user/reference/overview/"
        }
      },
      "osx_images": {
        "$id": "osx_images",
        "title": "Osx Images",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "summary": "OSX image to use for the build environment",
              "only": {
                "os": [
                  "osx"
                ]
              }
            },
            "normal": true
          },
          {
            "type": "string",
            "only": {
              "os": [
                "osx"
              ]
            }
          }
        ]
      },
      "perforce_test_path": {
        "$id": "perforce_test_path",
        "title": "Perforce Test Path",
        "type": "string",
        "summary": "Perforce depot subpath"
      },
      "secure": {
        "$id": "secure",
        "title": "Secure",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "secure": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "maxProperties": 1,
            "normal": true
          },
          {
            "type": "string",
            "normal": true
          }
        ]
      },
      "secures": {
        "$id": "secures",
        "title": "Secures",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/secure"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/secure"
          }
        ]
      },
      "service": {
        "$id": "service",
        "title": "Service",
        "type": "string",
        "downcase": true,
        "example": [
          "postgresql",
          "redis"
        ],
        "enum": [
          "cassandra",
          "couchdb",
          "docker",
          "elasticsearch",
          "memcached",
          "mongodb",
          "mysql",
          "neo4j",
          "postgresql",
          "rabbitmq",
          "redis",
          "riak",
          "xvfb",
          "cri-dockerd"
        ],
        "values": {
          "memcached": {
            "aliases": [
              "memcache"
            ]
          },
          "postgresql": {
            "aliases": [
              "postgres"
            ]
          },
          "rabbitmq": {
            "aliases": [
              "rabbitmq-server"
            ]
          },
          "redis": {
            "aliases": [
              "redis-server"
            ]
          },
          "xvfb": {
            "only": {
              "dist": [
                "xenial"
              ]
            }
          }
        }
      },
      "services": {
        "$id": "services",
        "title": "Services",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/service"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/service"
          }
        ],
        "summary": "Services to set up and start"
      },
      "stack": {
        "$id": "stack",
        "title": "Stack",
        "type": "string",
        "summary": "Build environment stack",
        "downcase": true,
        "flags": [
          "edge",
          "internal"
        ],
        "enum": [
          "connie",
          "amethyst",
          "garnet",
          "stevonnie",
          "opal",
          "sardonyx",
          "onion",
          "cookiecat"
        ]
      },
      "stage": {
        "$id": "stage",
        "title": "Stage",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "summary": "The name of the stage",
                "example": "unit tests"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "name"
            },
            "normal": true
          },
          {
            "type": "string",
            "example": "unit tests"
          }
        ]
      },
      "stages": {
        "$id": "stages",
        "title": "Stages",
        "description": "Build stages group jobs, and run jobs in each stage in parallel,\nbut run one stage after another sequentially.",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/stage"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/stage"
          }
        ],
        "summary": "Build stages definition",
        "see": {
          "Build Stages": "https://docs.travis-ci.com/user/build-stages/"
        }
      },
      "strs": {
        "$id": "strs",
        "title": "Strs",
        "anyOf": [
          {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string"
                }
              ]
            },
            "normal": true
          },
          {
            "type": "string"
          }
        ]
      },
      "sudo": {
        "$id": "sudo",
        "title": "Sudo",
        "anyOf": [
          {
            "type": "boolean",
            "normal": true
          },
          {
            "type": "string"
          }
        ],
        "summary": "Whether to allow sudo access",
        "example": "required",
        "deprecated": "The key `sudo` has no effect anymore."
      },
      "support": {
        "$id": "support",
        "title": "Support",
        "anyOf": [
          {
            "$ref": "#/definitions/support/android_support"
          },
          {
            "$ref": "#/definitions/support/c_support"
          },
          {
            "$ref": "#/definitions/support/clojure_support"
          },
          {
            "$ref": "#/definitions/support/cpp_support"
          },
          {
            "$ref": "#/definitions/support/crystal_support"
          },
          {
            "$ref": "#/definitions/support/csharp_support"
          },
          {
            "$ref": "#/definitions/support/d_support"
          },
          {
            "$ref": "#/definitions/support/dart_support"
          },
          {
            "$ref": "#/definitions/support/elixir_support"
          },
          {
            "$ref": "#/definitions/support/elm_support"
          },
          {
            "$ref": "#/definitions/support/erlang_support"
          },
          {
            "$ref": "#/definitions/support/generic_support"
          },
          {
            "$ref": "#/definitions/support/go_support"
          },
          {
            "$ref": "#/definitions/support/groovy_support"
          },
          {
            "$ref": "#/definitions/support/hack_support"
          },
          {
            "$ref": "#/definitions/support/haskell_support"
          },
          {
            "$ref": "#/definitions/support/haxe_support"
          },
          {
            "$ref": "#/definitions/support/java_support"
          },
          {
            "$ref": "#/definitions/support/julia_support"
          },
          {
            "$ref": "#/definitions/support/matlab_support"
          },
          {
            "$ref": "#/definitions/support/nix_support"
          },
          {
            "$ref": "#/definitions/support/node_js_support"
          },
          {
            "$ref": "#/definitions/support/perl_support"
          },
          {
            "$ref": "#/definitions/support/perl6_support"
          },
          {
            "$ref": "#/definitions/support/php_support"
          },
          {
            "$ref": "#/definitions/support/python_support"
          },
          {
            "$ref": "#/definitions/support/r_support"
          },
          {
            "$ref": "#/definitions/support/ruby_support"
          },
          {
            "$ref": "#/definitions/support/objective-c_support"
          },
          {
            "$ref": "#/definitions/support/rust_support"
          },
          {
            "$ref": "#/definitions/support/scala_support"
          },
          {
            "$ref": "#/definitions/support/shell_support"
          },
          {
            "$ref": "#/definitions/support/smalltalk_support"
          },
          {
            "$ref": "#/definitions/support/__connie___support"
          },
          {
            "$ref": "#/definitions/support/__amethyst___support"
          },
          {
            "$ref": "#/definitions/support/__garnet___support"
          },
          {
            "$ref": "#/definitions/support/__stevonnie___support"
          },
          {
            "$ref": "#/definitions/support/__opal___support"
          },
          {
            "$ref": "#/definitions/support/__sardonyx___support"
          },
          {
            "$ref": "#/definitions/support/__onion___support"
          },
          {
            "$ref": "#/definitions/support/__cookiecat___support"
          }
        ],
        "normal": true
      },
      "vault": {
        "$id": "vault",
        "title": "Vault",
        "type": "object",
        "properties": {
          "api_url": {
            "type": "string"
          },
          "token": {
            "$ref": "#/definitions/type/secure",
            "strict": true
          },
          "secrets": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "kv_api_ver": {
                          "type": "string",
                          "enum": [
                            "kv2",
                            "kv1"
                          ],
                          "downcase": true,
                          "defaults": [
                            {
                              "value": "kv2"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "namespace": {
                          "anyOf": [
                            {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "name"
                                    ]
                                  }
                                ]
                              },
                              "normal": true
                            },
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "name"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                "normal": true
              },
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "kv_api_ver": {
                    "type": "string",
                    "enum": [
                      "kv2",
                      "kv1"
                    ],
                    "downcase": true,
                    "defaults": [
                      {
                        "value": "kv2"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "namespace": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "name"
                              ]
                            }
                          ]
                        },
                        "normal": true
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "api_url",
          "token"
        ]
      },
      "version": {
        "$id": "version",
        "title": "Version",
        "type": "string",
        "summary": "Build config specification version",
        "example": ">= 1.0.0",
        "pattern": "^(~>|>|>=|=|<=|<) (\\d+(?:\\.\\d+)?(?:\\.\\d+)?)$"
      },
      "virt": {
        "$id": "virt",
        "title": "Virtualization",
        "type": "string",
        "summary": "Build environment virtualization",
        "aliases": [
          "virtualization"
        ],
        "flags": [
          "internal"
        ],
        "downcase": true,
        "enum": [
          "lxd",
          "vm"
        ]
      },
      "vm": {
        "$id": "vm",
        "title": "Vm",
        "description": "These settings can be used in order to choose VM size",
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "enum": [
              "medium",
              "large",
              "x-large",
              "2x-large",
              "gpu-medium",
              "gpu-xlarge"
            ]
          }
        },
        "additionalProperties": false,
        "summary": "VM size settings",
        "see": {
          "Customizing the Build": "https://docs.travis-ci.com/user/customizing-the-build/"
        }
      },
      "workspaces": {
        "$id": "workspaces",
        "title": "Workspaces",
        "description": "Workspaces allow jobs within the same build to share files. They are\nuseful when you want to use build artifacts from a previous job.\nFor example, you create a cache that can be used in multiple jobs\nin the same build later.",
        "type": "object",
        "properties": {
          "create": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "flags": [
                  "unique"
                ]
              },
              "paths": {
                "$ref": "#/definitions/type/strs"
              }
            },
            "additionalProperties": false,
            "normal": true
          },
          "use": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "unique"
            ]
          }
        },
        "additionalProperties": false,
        "summary": "Shared build workspaces",
        "see": {
          "Workspaces": "https://docs.travis-ci.com/user/using-workspaces"
        },
        "normal": true
      }
    },
    "import": {
      "import_template": {
        "$id": "import_template",
        "title": "Import Template",
        "type": "string",
        "vars": [
          "commit_message"
        ]
      }
    },
    "addon": {
      "apt": {
        "$id": "apt",
        "title": "Apt",
        "description": "Install APT packages and sources without using apt-get commands in a before_install script manually.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "packages": {
                "$ref": "#/definitions/type/strs",
                "aliases": [
                  "package"
                ],
                "summary": "Package names",
                "example": "cmake"
              },
              "sources": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "sourceline": {
                              "type": "string"
                            },
                            "key_url": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "prefix": {
                            "key": "name"
                          },
                          "normal": true
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "normal": true
                  },
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "sourceline": {
                        "type": "string"
                      },
                      "key_url": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "prefix": {
                      "key": "name"
                    },
                    "normal": true
                  },
                  {
                    "type": "string"
                  }
                ],
                "aliases": [
                  "source"
                ],
                "summary": "Package sources",
                "example": "ubuntu-toolchain-r-test"
              },
              "dist": {
                "type": "string",
                "summary": "Distribution"
              },
              "update": {
                "type": "boolean",
                "summary": "Whether to run apt-get update"
              },
              "config": {
                "type": "object",
                "properties": {
                  "retries": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "packages"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/strs",
            "example": "cmake"
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "APT packages and sources to install",
        "see": {
          "Installing Packages with the APT Addon": "https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon"
        },
        "normal": true
      },
      "artifacts": {
        "$id": "artifacts",
        "title": "Artifacts",
        "description": "Automatically upload your build artifacts to Amazon S3 at the end of a build, after the `after_script` phase.\n\nPlease see [our documentation](https://docs.travis-ci.com/user/uploading-artifacts/) for details.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "summary": "Enable or disable uploading artifacts"
              },
              "bucket": {
                "type": "string",
                "summary": "The S3 bucket to upload to"
              },
              "endpoint": {
                "type": "string",
                "summary": "The S3 compatible endpoint to upload to"
              },
              "key": {
                "$ref": "#/definitions/type/secure",
                "summary": "The S3 access key id",
                "aliases": [
                  "aws_access_key_id",
                  "aws_access_key",
                  "access_key_id",
                  "access_key"
                ],
                "strict": false
              },
              "secret": {
                "$ref": "#/definitions/type/secure",
                "summary": "The S3 secret access key",
                "aliases": [
                  "aws_secret_access_key",
                  "aws_secret_key",
                  "secret_access_key",
                  "secret_key"
                ]
              },
              "region": {
                "type": "string",
                "aliases": [
                  "s3_region"
                ],
                "summary": "The S3 region"
              },
              "paths": {
                "$ref": "#/definitions/type/strs",
                "summary": "Paths to the files to upload"
              },
              "branch": {
                "type": "string"
              },
              "log_format": {
                "type": "string"
              },
              "target_paths": {
                "$ref": "#/definitions/type/strs"
              },
              "debug": {
                "type": "boolean"
              },
              "concurrency": {
                "type": "number"
              },
              "max_size": {
                "type": "number"
              },
              "permissions": {
                "type": "string"
              },
              "working_dir": {
                "type": "string"
              },
              "cache_control": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "Build artifacts to upload at the end of the build",
        "see": {
          "Uploading Artifacts on Travis CI": "https://docs.travis-ci.com/user/uploading-artifacts/"
        },
        "normal": true
      },
      "browserstack": {
        "$id": "browserstack",
        "title": "Browserstack",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "summary": "Browserstack username"
              },
              "access_key": {
                "$ref": "#/definitions/type/secure",
                "summary": "Browserstack access key"
              },
              "forcelocal": {
                "type": "boolean",
                "summary": "Force all network traffic to be resolved via the build environment VM"
              },
              "only": {
                "type": "string",
                "summary": "Restrict local testing access to the specified local servers/directories"
              },
              "app_path": {
                "type": "string",
                "summary": "Path to the app file"
              },
              "proxyHost": {
                "type": "string"
              },
              "proxyPort": {
                "type": "string"
              },
              "proxyUser": {
                "type": "string"
              },
              "proxyPass": {
                "$ref": "#/definitions/type/secure"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "Browserstack settings",
        "see": {
          "Using BrowserStack with Travis CI": "https://docs.travis-ci.com/user/browserstack/"
        },
        "normal": true
      },
      "code_climate": {
        "$id": "code_climate",
        "title": "Code Climate",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "repo_token": {
                "$ref": "#/definitions/type/secure",
                "summary": "Code Climate repo token"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "repo_token"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/secure"
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "CodeClimate settings",
        "see": {
          "Using Code Climate with Travis CI": "https://docs.travis-ci.com/user/code-climate/"
        },
        "normal": true
      },
      "coverity_scan": {
        "$id": "coverity_scan",
        "title": "Coverity Scan",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "project": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "prefix": {
                      "key": "name"
                    },
                    "normal": true,
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "build_script_url": {
                "type": "string"
              },
              "branch_pattern": {
                "type": "string"
              },
              "notification_email": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "build_command": {
                "type": "string"
              },
              "build_command_prepend": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "CoverityScan settings",
        "see": {
          "The Coverity Scan Addon for Travis CI": "https://scan.coverity.com/travis_ci"
        },
        "normal": true
      },
      "homebrew": {
        "$id": "homebrew",
        "title": "Homebrew",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "update": {
                "type": "boolean"
              },
              "packages": {
                "$ref": "#/definitions/type/strs"
              },
              "casks": {
                "$ref": "#/definitions/type/strs"
              },
              "taps": {
                "$ref": "#/definitions/type/strs"
              },
              "brewfile": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "packages"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/strs"
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "Homebrew packages to install",
        "see": {
          "Installing Packages on macOS": "https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-on-macos"
        },
        "normal": true
      },
      "jwts": {
        "$id": "jwts",
        "title": "JSON Web Tokens",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/secure"
            },
            "deprecated": "Discontinued as of April 17, 2018",
            "normal": true
          },
          {
            "$ref": "#/definitions/type/secure"
          }
        ],
        "see": {
          "JWT addon will be deprecated on April 17": "https://blog.travis-ci.com/2018-01-23-jwt-addon-is-deprecated"
        },
        "deprecated": "Discontinued as of April 17, 2018"
      },
      "pkg": {
        "$id": "pkg",
        "title": "Pkg",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "packages": {
                "$ref": "#/definitions/type/strs",
                "aliases": [
                  "package"
                ],
                "summary": "Package names",
                "example": "cmake"
              },
              "branch": {
                "type": "string",
                "summary": "Packages branch",
                "example": "quarterly"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "packages"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/strs",
            "example": "cmake"
          },
          {
            "type": "boolean"
          }
        ],
        "normal": true
      },
      "sauce_connect": {
        "$id": "sauce_connect",
        "title": "Sauce Connect",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "direct_domains": {
                "type": "string"
              },
              "tunnel_domains": {
                "type": "string"
              },
              "no_ssl_bump_domains": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "SourceConnect settings",
        "see": {
          "Using Sauce Labs with Travis CI": "https://docs.travis-ci.com/user/sauce-connect/"
        },
        "normal": true
      },
      "sbom": {
        "$id": "sbom",
        "title": "Sbom",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "on": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "branch": {
                        "$ref": "#/definitions/type/branches"
                      },
                      "condition": {
                        "$ref": "#/definitions/type/strs"
                      },
                      "all_branches": {
                        "type": "boolean"
                      },
                      "pr": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "normal": true,
                    "prefix": {
                      "key": "branch",
                      "only": [
                        "str"
                      ]
                    }
                  },
                  {
                    "$ref": "#/definitions/type/branches"
                  }
                ],
                "normal": true,
                "aliases": [
                  "true"
                ]
              },
              "run_phase": {
                "type": "string",
                "defaults": [
                  {
                    "value": "after_success"
                  }
                ],
                "enum": [
                  "before_script",
                  "script",
                  "after_success",
                  "after_failure"
                ]
              },
              "output_format": {
                "type": "string",
                "defaults": [
                  {
                    "value": "cyclonedx-json"
                  }
                ],
                "enum": [
                  "cyclonedx-json",
                  "cyclonedx-xml",
                  "spdx-json"
                ]
              },
              "output_dir": {
                "type": "string"
              },
              "input_dir": {
                "$ref": "#/definitions/type/strs"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "SBOM Generation",
        "see": {
          "Using SBOM generation with Travis CI": "https://docs.travis-ci.com/"
        },
        "normal": true
      },
      "snaps": {
        "$id": "snaps",
        "title": "Snaps",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "classic": {
                      "type": "boolean"
                    },
                    "channel": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "prefix": {
                    "key": "name"
                  },
                  "normal": true
                },
                {
                  "type": "string"
                }
              ]
            },
            "normal": true
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "classic": {
                "type": "boolean"
              },
              "channel": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "name"
            },
            "normal": true
          },
          {
            "type": "string"
          }
        ],
        "summary": "Ubuntu Snaps to install",
        "see": {
          "Snap Store": "https://docs.travis-ci.com/user/deployment/snaps/"
        }
      },
      "sonarcloud": {
        "$id": "sonarcloud",
        "title": "Sonarcloud",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "organization": {
                "type": "string"
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "github_token": {
                "$ref": "#/definitions/type/secure",
                "deprecated": "setting a GitHub token is deprecated"
              },
              "branches": {
                "$ref": "#/definitions/type/strs",
                "deprecated": "setting a branch is deprecated"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "summary": "Sonarcloud settings",
        "see": {
          "Using SonarCloud with Travis CI": "https://docs.travis-ci.com/user/sonarcloud/"
        },
        "normal": true
      }
    },
    "deploy": {
      "anynines": {
        "$id": "anynines",
        "title": "Anynines",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "organization": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "app_name": {
                "type": "string"
              },
              "buildpack": {
                "type": "string"
              },
              "manifest": {
                "type": "string"
              },
              "logout": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "anynines"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "anynines"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "azure_web_apps": {
        "$id": "azure_web_apps",
        "title": "Azure Web Apps",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "site": {
                "type": "string"
              },
              "slot": {
                "type": "string"
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "verbose": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "azure_web_apps"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "azure_web_apps"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "bintray": {
        "$id": "bintray",
        "title": "Bintray",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "key": {
                "$ref": "#/definitions/type/secure"
              },
              "file": {
                "type": "string"
              },
              "passphrase": {
                "$ref": "#/definitions/type/secure"
              },
              "url": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "bintray"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "bintray"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "bluemixcloudfoundry": {
        "$id": "bluemixcloudfoundry",
        "title": "Bluemixcloudfoundry",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "organization": {
                "type": "string"
              },
              "api": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "buildpack": {
                "type": "string"
              },
              "manifest": {
                "type": "string"
              },
              "skip_ssl_validation": {
                "type": "boolean"
              },
              "app_name": {
                "type": "string"
              },
              "logout": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "bluemixcloudfoundry"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "bluemixcloudfoundry"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "boxfuse": {
        "$id": "boxfuse",
        "title": "Boxfuse",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret": {
                "$ref": "#/definitions/type/secure"
              },
              "config_file": {
                "type": "string",
                "aliases": [
                  "configfile"
                ]
              },
              "payload": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "env": {
                "type": "string"
              },
              "extra_args": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "boxfuse"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "boxfuse"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "branches": {
        "$id": "branches",
        "title": "Branches",
        "anyOf": [
          {
            "$ref": "#/definitions/type/strs",
            "normal": true
          },
          {
            "type": "object",
            "normal": true,
            "deprecated": "branch_specific_option_hash"
          }
        ]
      },
      "cargo": {
        "$id": "cargo",
        "title": "Cargo",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "allow_dirty": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "cargo"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "cargo"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "chef_supermarket": {
        "$id": "chef_supermarket",
        "title": "Chef Supermarket",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string"
              },
              "client_key": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "aliases": [
                  "cookbook_name"
                ]
              },
              "category": {
                "type": "string",
                "aliases": [
                  "cookbook_category"
                ]
              },
              "dir": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "chef_supermarket"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "chef_supermarket"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "cloud66": {
        "$id": "cloud66",
        "title": "Cloud66",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "redeployment_hook": {
                "$ref": "#/definitions/type/secure"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "cloud66"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "cloud66"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "cloudfiles": {
        "$id": "cloudfiles",
        "title": "Cloudfiles",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "api_key": {
                "$ref": "#/definitions/type/secure"
              },
              "region": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "glob": {
                "type": "string"
              },
              "dot_match": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "cloudfiles"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "cloudfiles"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "cloudformation": {
        "$id": "cloudformation",
        "title": "Cloudformation",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "region": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "stack_name": {
                "type": "string"
              },
              "stack_name_prefix": {
                "type": "string"
              },
              "promote": {
                "type": "boolean"
              },
              "role_arn": {
                "type": "string"
              },
              "sts_assume_role": {
                "type": "string"
              },
              "capabilities": {
                "$ref": "#/definitions/type/strs"
              },
              "wait": {
                "type": "boolean"
              },
              "wait_timeout": {
                "type": "number"
              },
              "create_timeout": {
                "type": "number"
              },
              "parameters": {
                "$ref": "#/definitions/type/strs"
              },
              "output_file": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "cloudformation"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "cloudformation"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "cloudfoundry": {
        "$id": "cloudfoundry",
        "title": "Cloudfoundry",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "organization": {
                "type": "string"
              },
              "api": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "buildpack": {
                "type": "string"
              },
              "manifest": {
                "type": "string"
              },
              "skip_ssl_validation": {
                "type": "boolean"
              },
              "app_name": {
                "type": "string"
              },
              "logout": {
                "type": "boolean"
              },
              "v3": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "cloudfoundry"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "cloudfoundry"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "codedeploy": {
        "$id": "codedeploy",
        "title": "Codedeploy",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "application": {
                "type": "string"
              },
              "deployment_group": {
                "type": "string"
              },
              "revision_type": {
                "type": "string",
                "enum": [
                  "s3",
                  "github"
                ],
                "ignore_case": true
              },
              "commit_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "repository": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "file_exists_behavior": {
                "type": "string",
                "enum": [
                  "disallow",
                  "overwrite",
                  "retain"
                ],
                "ignore_case": true
              },
              "wait_until_deployed": {
                "type": "boolean"
              },
              "bucket": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "bundle_type": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "codedeploy"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "codedeploy"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "conditions": {
        "$id": "conditions",
        "title": "Conditions",
        "anyOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "os": {
                    "$ref": "#/definitions/type/os"
                  },
                  "branch": {
                    "$ref": "#/definitions/deploy/branches"
                  },
                  "repo": {
                    "type": "string"
                  },
                  "condition": {
                    "$ref": "#/definitions/type/strs"
                  },
                  "all_branches": {
                    "type": "boolean"
                  },
                  "tags": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false,
                "prefix": {
                  "key": "branch",
                  "only": [
                    "str"
                  ]
                }
              },
              {
                "$ref": "#/definitions/type/support"
              }
            ],
            "normal": true
          },
          {
            "$ref": "#/definitions/deploy/branches"
          }
        ]
      },
      "convox": {
        "$id": "convox",
        "title": "Convox",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "rack": {
                "type": "string"
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "install_url": {
                "type": "string"
              },
              "update_cli": {
                "type": "boolean"
              },
              "create": {
                "type": "boolean"
              },
              "promote": {
                "type": "boolean"
              },
              "env": {
                "$ref": "#/definitions/type/strs"
              },
              "env_file": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "generation": {
                "type": "number"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "convox"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "app",
              "rack",
              "password",
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "convox"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "datica": {
        "$id": "datica",
        "title": "Datica",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "target": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "datica"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "datica"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "ecr": {
        "$id": "ecr",
        "title": "Ecr",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "account_id": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "ecr"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "ecr"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "edge": {
        "$id": "edge",
        "title": "Edge",
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "source": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "elasticbeanstalk": {
        "$id": "elasticbeanstalk",
        "title": "Elasticbeanstalk",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "region": {
                "type": "string"
              },
              "bucket": {
                "type": "string",
                "aliases": [
                  "bucket_name"
                ]
              },
              "app": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "env": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "description": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "zip_file": {
                "type": "string"
              },
              "bucket_path": {
                "type": "string"
              },
              "wait_until_deployed": {
                "type": "boolean"
              },
              "debug": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "elasticbeanstalk"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "elasticbeanstalk"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "engineyard": {
        "$id": "engineyard",
        "title": "Engineyard",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "email": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "api_key": {
                "$ref": "#/definitions/type/secure"
              },
              "account": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "app": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "env": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ],
                "aliases": [
                  "environment"
                ]
              },
              "migrate": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "engineyard"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "engineyard"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "firebase": {
        "$id": "firebase",
        "title": "Firebase",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "project": {
                "type": "string"
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "message": {
                "type": "string"
              },
              "only": {
                "type": "string"
              },
              "force": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "firebase"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "firebase"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "flynn": {
        "$id": "flynn",
        "title": "Flynn",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "git": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "provider": {
                "type": "string",
                "enum": [
                  "flynn"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "flynn"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "gae": {
        "$id": "gae",
        "title": "Gae",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "project": {
                "type": "string"
              },
              "keyfile": {
                "type": "string"
              },
              "config": {
                "$ref": "#/definitions/type/strs"
              },
              "version": {
                "type": "string"
              },
              "verbosity": {
                "type": "string"
              },
              "promote": {
                "type": "boolean"
              },
              "no_promote": {
                "type": "boolean",
                "deprecated": "use promote: false"
              },
              "stop_previous_version": {
                "type": "boolean"
              },
              "no_stop_previous_version": {
                "type": "boolean",
                "deprecated": "use stop_previous_version: false"
              },
              "install_sdk": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "gae"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "gae"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "gcs": {
        "$id": "gcs",
        "title": "Gcs",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "key_file": {
                "type": "string"
              },
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "bucket": {
                "type": "string"
              },
              "upload_dir": {
                "type": "string"
              },
              "local_dir": {
                "type": "string"
              },
              "dot_match": {
                "type": "boolean"
              },
              "acl": {
                "type": "string"
              },
              "cache_control": {
                "type": "string"
              },
              "detect_encoding": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "gcs"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "gcs"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "git_push": {
        "$id": "git_push",
        "title": "Git Push",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "token": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "github_token"
                ]
              },
              "deploy_key": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              },
              "base_branch": {
                "type": "string"
              },
              "commit_message": {
                "type": "string"
              },
              "allow_empty_commit": {
                "type": "boolean"
              },
              "allow_same_branch": {
                "type": "boolean"
              },
              "force": {
                "type": "boolean"
              },
              "local_dir": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "enterprise": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "git_push"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "git_push"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "gleis": {
        "$id": "gleis",
        "title": "Gleis",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "app": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "key_name": {
                "type": "string"
              },
              "verbose": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "gleis"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "gleis"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "hackage": {
        "$id": "hackage",
        "title": "Hackage",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "publish": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "hackage"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "hackage"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "hephy": {
        "$id": "hephy",
        "title": "Hephy",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "controller": {
                "type": "string"
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "app": {
                "type": "string"
              },
              "cli_version": {
                "type": "string"
              },
              "verbose": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "hephy"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "hephy"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "heroku": {
        "$id": "heroku",
        "title": "Heroku",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "strategy": {
                "type": "string",
                "defaults": [
                  {
                    "value": "api"
                  }
                ],
                "enum": [
                  "api",
                  "git"
                ]
              },
              "api_key": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "$ref": "#/definitions/type/secure"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/type/secure"
                  }
                ]
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "app": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "git": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "heroku"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "heroku"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "lambda": {
        "$id": "lambda",
        "title": "Lambda",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "region": {
                "type": "string"
              },
              "function_name": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "handler_name": {
                "type": "string"
              },
              "module_name": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "memory_size": {
                "type": "string"
              },
              "runtime": {
                "type": "string"
              },
              "security_group_ids": {
                "$ref": "#/definitions/type/strs"
              },
              "environment": {
                "$ref": "#/definitions/type/secures",
                "aliases": [
                  "environment_variables"
                ]
              },
              "subnet_ids": {
                "$ref": "#/definitions/type/strs"
              },
              "dead_letter_arn": {
                "type": "string"
              },
              "kms_key_arn": {
                "type": "string"
              },
              "tracing_mode": {
                "type": "string",
                "enum": [
                  "Active",
                  "PassThrough"
                ]
              },
              "layers": {
                "$ref": "#/definitions/type/strs"
              },
              "publish": {
                "type": "boolean"
              },
              "function_tags": {
                "$ref": "#/definitions/type/secures"
              },
              "dot_match": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "lambda"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "lambda"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "launchpad": {
        "$id": "launchpad",
        "title": "Launchpad",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "slug": {
                "type": "string"
              },
              "oauth_token": {
                "$ref": "#/definitions/type/secure"
              },
              "oauth_token_secret": {
                "$ref": "#/definitions/type/secure"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "launchpad"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "slug",
              "oauth_token",
              "oauth_token_secret",
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "launchpad"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "netlify": {
        "$id": "netlify",
        "title": "Netlify",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "site": {
                "type": "string"
              },
              "auth": {
                "$ref": "#/definitions/type/secure"
              },
              "dir": {
                "type": "string"
              },
              "functions": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "prod": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "netlify"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "netlify"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "npm": {
        "$id": "npm",
        "title": "Npm",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "email": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "api_token": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "api_key"
                ]
              },
              "access": {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              },
              "registry": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "auth_method": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "npm"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "npm"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "nuget": {
        "$id": "nuget",
        "title": "Nuget",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_key": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "registry": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "no_symbols": {
                "type": "boolean"
              },
              "skip_duplicate": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "nuget"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "nuget"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "openshift": {
        "$id": "openshift",
        "title": "Openshift",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "server": {
                "type": "string"
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "project": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "openshift"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "openshift"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "opsworks": {
        "$id": "opsworks",
        "title": "Opsworks",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "region": {
                "type": "string"
              },
              "app_id": {
                "type": "string"
              },
              "instance_ids": {
                "$ref": "#/definitions/type/strs"
              },
              "layer_ids": {
                "$ref": "#/definitions/type/strs"
              },
              "migrate": {
                "type": "boolean"
              },
              "wait_until_deployed": {
                "type": "boolean"
              },
              "custom_json": {
                "type": "string"
              },
              "update_on_success": {
                "type": "boolean",
                "aliases": [
                  "update_app_on_success"
                ]
              },
              "provider": {
                "type": "string",
                "enum": [
                  "opsworks"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "opsworks"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "packagecloud": {
        "$id": "packagecloud",
        "title": "Packagecloud",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "repository": {
                "type": "string"
              },
              "local_dir": {
                "type": "string"
              },
              "dist": {
                "type": "string"
              },
              "package_glob": {
                "$ref": "#/definitions/type/strs"
              },
              "force": {
                "type": "boolean"
              },
              "connect_timeout": {
                "type": "number"
              },
              "read_timeout": {
                "type": "number"
              },
              "write_timeout": {
                "type": "number"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "packagecloud"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "packagecloud"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "pages": {
        "$id": "pages",
        "title": "Pages",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "strategy": {
                "type": "string",
                "defaults": [
                  {
                    "value": "git"
                  }
                ],
                "enum": [
                  "api",
                  "git"
                ]
              },
              "token": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "github_token"
                ]
              },
              "deploy_key": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "target_branch": {
                "type": "string"
              },
              "local_dir": {
                "type": "string"
              },
              "fqdn": {
                "type": "string"
              },
              "project_name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "aliases": [
                  "github_url"
                ]
              },
              "keep_history": {
                "type": "boolean"
              },
              "verbose": {
                "type": "boolean"
              },
              "allow_empty_commit": {
                "type": "boolean"
              },
              "commit_message": {
                "type": "string"
              },
              "committer_from_gh": {
                "type": "boolean"
              },
              "deployment_file": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "pages"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "pages"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "providers": {
        "$id": "providers",
        "title": "Providers",
        "anyOf": [
          {
            "$ref": "#/definitions/deploy/anynines"
          },
          {
            "$ref": "#/definitions/deploy/azure_web_apps"
          },
          {
            "$ref": "#/definitions/deploy/bintray"
          },
          {
            "$ref": "#/definitions/deploy/bluemixcloudfoundry"
          },
          {
            "$ref": "#/definitions/deploy/boxfuse"
          },
          {
            "$ref": "#/definitions/deploy/cargo"
          },
          {
            "$ref": "#/definitions/deploy/chef_supermarket"
          },
          {
            "$ref": "#/definitions/deploy/cloud66"
          },
          {
            "$ref": "#/definitions/deploy/cloudfiles"
          },
          {
            "$ref": "#/definitions/deploy/cloudformation"
          },
          {
            "$ref": "#/definitions/deploy/cloudfoundry"
          },
          {
            "$ref": "#/definitions/deploy/codedeploy"
          },
          {
            "$ref": "#/definitions/deploy/convox"
          },
          {
            "$ref": "#/definitions/deploy/datica"
          },
          {
            "$ref": "#/definitions/deploy/ecr"
          },
          {
            "$ref": "#/definitions/deploy/elasticbeanstalk"
          },
          {
            "$ref": "#/definitions/deploy/engineyard"
          },
          {
            "$ref": "#/definitions/deploy/firebase"
          },
          {
            "$ref": "#/definitions/deploy/flynn"
          },
          {
            "$ref": "#/definitions/deploy/gae"
          },
          {
            "$ref": "#/definitions/deploy/gcs"
          },
          {
            "$ref": "#/definitions/deploy/git_push"
          },
          {
            "$ref": "#/definitions/deploy/gleis"
          },
          {
            "$ref": "#/definitions/deploy/hackage"
          },
          {
            "$ref": "#/definitions/deploy/hephy"
          },
          {
            "$ref": "#/definitions/deploy/heroku"
          },
          {
            "$ref": "#/definitions/deploy/lambda"
          },
          {
            "$ref": "#/definitions/deploy/launchpad"
          },
          {
            "$ref": "#/definitions/deploy/netlify"
          },
          {
            "$ref": "#/definitions/deploy/npm"
          },
          {
            "$ref": "#/definitions/deploy/nuget"
          },
          {
            "$ref": "#/definitions/deploy/openshift"
          },
          {
            "$ref": "#/definitions/deploy/opsworks"
          },
          {
            "$ref": "#/definitions/deploy/packagecloud"
          },
          {
            "$ref": "#/definitions/deploy/pages"
          },
          {
            "$ref": "#/definitions/deploy/puppetforge"
          },
          {
            "$ref": "#/definitions/deploy/pypi"
          },
          {
            "$ref": "#/definitions/deploy/releases"
          },
          {
            "$ref": "#/definitions/deploy/rubygems"
          },
          {
            "$ref": "#/definitions/deploy/s3"
          },
          {
            "$ref": "#/definitions/deploy/scalingo"
          },
          {
            "$ref": "#/definitions/deploy/script"
          },
          {
            "$ref": "#/definitions/deploy/snap"
          },
          {
            "$ref": "#/definitions/deploy/surge"
          },
          {
            "$ref": "#/definitions/deploy/testfairy"
          },
          {
            "$ref": "#/definitions/deploy/transifex"
          }
        ],
        "normal": true,
        "detect": "provider"
      },
      "puppetforge": {
        "$id": "puppetforge",
        "title": "Puppetforge",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "url": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "puppetforge"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "username",
              "password",
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "puppetforge"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "pypi": {
        "$id": "pypi",
        "title": "Pypi",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "server": {
                "type": "string"
              },
              "distributions": {
                "type": "string"
              },
              "docs_dir": {
                "type": "string"
              },
              "skip_existing": {
                "type": "boolean"
              },
              "upload_docs": {
                "type": "boolean"
              },
              "skip_upload_docs": {
                "type": "boolean",
                "deprecated": "use upload_docs: false"
              },
              "twine_check": {
                "type": "boolean"
              },
              "remove_build_dir": {
                "type": "boolean"
              },
              "setuptools_version": {
                "type": "string"
              },
              "twine_version": {
                "type": "string"
              },
              "wheel_version": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "pypi"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "pypi"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "releases": {
        "$id": "releases",
        "title": "Releases",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "token": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "api_key"
                ]
              },
              "repo": {
                "type": "string"
              },
              "file": {
                "$ref": "#/definitions/type/strs"
              },
              "file_glob": {
                "type": "boolean"
              },
              "overwrite": {
                "type": "boolean"
              },
              "draft": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "prerelease": {
                "type": "boolean"
              },
              "release_number": {
                "type": "string"
              },
              "release_notes": {
                "type": "string",
                "aliases": [
                  "body"
                ]
              },
              "release_notes_file": {
                "type": "string"
              },
              "tag_name": {
                "type": "string"
              },
              "target_commitish": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "releases"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "releases"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "rubygems": {
        "$id": "rubygems",
        "title": "Rubygems",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_key": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "$ref": "#/definitions/type/secure"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/type/secure"
                  }
                ]
              },
              "username": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "$ref": "#/definitions/type/secure",
                        "strict": false
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/type/secure",
                    "strict": false
                  }
                ],
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "$ref": "#/definitions/type/secure"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/type/secure"
                  }
                ]
              },
              "gem": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "gemspec": {
                "type": "string"
              },
              "gemspec_glob": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "rubygems"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "rubygems"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "s3": {
        "$id": "s3",
        "title": "S3",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "access_key_id": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "secret_access_key": {
                "$ref": "#/definitions/type/secure"
              },
              "bucket": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              },
              "upload_dir": {
                "type": "string"
              },
              "local_dir": {
                "type": "string"
              },
              "glob": {
                "type": "string"
              },
              "dot_match": {
                "type": "boolean"
              },
              "acl": {
                "type": "string"
              },
              "detect_encoding": {
                "type": "boolean"
              },
              "cache_control": {
                "$ref": "#/definitions/type/strs"
              },
              "expires": {
                "$ref": "#/definitions/type/strs"
              },
              "default_text_charset": {
                "type": "string"
              },
              "storage_class": {
                "type": "string"
              },
              "server_side_encryption": {
                "type": "boolean"
              },
              "index_document_suffix": {
                "type": "string"
              },
              "overwrite": {
                "type": "boolean"
              },
              "force_path_style": {
                "type": "boolean"
              },
              "max_threads": {
                "type": "number"
              },
              "verbose": {
                "type": "boolean"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "s3"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "s3"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "scalingo": {
        "$id": "scalingo",
        "title": "Scalingo",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_token": {
                "$ref": "#/definitions/type/secure",
                "aliases": [
                  "api_key"
                ]
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "aliases": [
                  "user"
                ]
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "remote": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "timeout": {
                "type": "number"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "scalingo"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "scalingo"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "script": {
        "$id": "script",
        "title": "Script",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "script": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "script"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "script"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "snap": {
        "$id": "snap",
        "title": "Snap",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "snap": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "snap"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "snap"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "surge": {
        "$id": "surge",
        "title": "Surge",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "login": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "token": {
                "$ref": "#/definitions/type/secure"
              },
              "project": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "surge"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "surge"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "testfairy": {
        "$id": "testfairy",
        "title": "Testfairy",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_key": {
                "$ref": "#/definitions/type/secure"
              },
              "app_file": {
                "type": "string"
              },
              "symbols_file": {
                "type": "string"
              },
              "testers_groups": {
                "type": "string"
              },
              "notify": {
                "type": "boolean"
              },
              "auto_update": {
                "type": "boolean"
              },
              "advanced_options": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "testfairy"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "testfairy"
            ],
            "strict": true
          }
        ],
        "normal": true
      },
      "transifex": {
        "$id": "transifex",
        "title": "Transifex",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_token": {
                "$ref": "#/definitions/type/secure"
              },
              "username": {
                "$ref": "#/definitions/type/secure",
                "strict": false
              },
              "password": {
                "$ref": "#/definitions/type/secure"
              },
              "hostname": {
                "type": "string"
              },
              "cli_version": {
                "type": "string"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "transifex"
                ],
                "strict": true
              },
              "on": {
                "$ref": "#/definitions/deploy/conditions",
                "aliases": [
                  "true"
                ]
              },
              "run": {
                "$ref": "#/definitions/type/strs"
              },
              "allow_failure": {
                "type": "boolean"
              },
              "cleanup": {
                "type": "boolean"
              },
              "skip_cleanup": {
                "type": "boolean",
                "deprecated": "not supported in dpl v2, use cleanup"
              },
              "edge": {
                "$ref": "#/definitions/deploy/edge"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "prefix": {
              "key": "provider",
              "only": [
                "str"
              ]
            },
            "required": [
              "provider"
            ]
          },
          {
            "type": "string",
            "enum": [
              "transifex"
            ],
            "strict": true
          }
        ],
        "normal": true
      }
    },
    "language": {
      "__amethyst__": {
        "$id": "__amethyst__",
        "title": "Amethyst",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__connie__": {
        "$id": "__connie__",
        "title": "Connie",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__cookiecat__": {
        "$id": "__cookiecat__",
        "title": "Cookiecat",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__garnet__": {
        "$id": "__garnet__",
        "title": "Garnet",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__onion__": {
        "$id": "__onion__",
        "title": "Onion",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__opal__": {
        "$id": "__opal__",
        "title": "Opal",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__sardonyx__": {
        "$id": "__sardonyx__",
        "title": "Sardonyx",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "__stevonnie__": {
        "$id": "__stevonnie__",
        "title": "Stevonnie",
        "type": "object",
        "flags": [
          "internal"
        ],
        "deprecated": "experimental stack language",
        "normal": true
      },
      "android": {
        "$id": "android",
        "title": "Android",
        "type": "object",
        "properties": {
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "android"
              ]
            }
          },
          "android": {
            "type": "object",
            "properties": {
              "components": {
                "$ref": "#/definitions/type/strs",
                "summary": "Android components to use"
              },
              "licenses": {
                "$ref": "#/definitions/type/strs",
                "summary": "Android licenses to use"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "android"
              ]
            }
          }
        },
        "summary": "Android support",
        "see": {
          "Building an Android Project": "https://docs.travis-ci.com/user/languages/android/"
        },
        "normal": true
      },
      "c": {
        "$id": "c",
        "title": "C",
        "type": "object",
        "summary": "C language support",
        "see": {
          "Building a C Project": "https://docs.travis-ci.com/user/languages/c/"
        },
        "normal": true
      },
      "clojure": {
        "$id": "clojure",
        "title": "Clojure",
        "type": "object",
        "properties": {
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "clojure"
              ]
            }
          },
          "lein": {
            "type": "string",
            "only": {
              "language": [
                "clojure"
              ]
            }
          }
        },
        "summary": "Clojure language support",
        "see": {
          "Building a Clojure Project": "https://docs.travis-ci.com/user/languages/clojure/"
        },
        "normal": true
      },
      "cpp": {
        "$id": "cpp",
        "title": "C++",
        "type": "object",
        "summary": "C++ language support",
        "see": {
          "Building a C++ Project": "https://docs.travis-ci.com/user/languages/c++/"
        },
        "normal": true
      },
      "crystal": {
        "$id": "crystal",
        "title": "Crystal",
        "type": "object",
        "properties": {
          "crystal": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "crystal"
              ]
            }
          }
        },
        "summary": "Crystal language support",
        "see": {
          "Building a Crystal Project": "https://docs.travis-ci.com/user/languages/crystal/"
        },
        "normal": true
      },
      "csharp": {
        "$id": "csharp",
        "title": "C#",
        "type": "object",
        "properties": {
          "dotnet": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "csharp"
              ]
            }
          },
          "mono": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "csharp"
              ]
            }
          },
          "solution": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "csharp"
              ]
            }
          }
        },
        "summary": "C# language support",
        "see": {
          "Building a C# Project": "https://docs.travis-ci.com/user/languages/csharp/"
        },
        "normal": true
      },
      "d": {
        "$id": "d",
        "title": "D",
        "type": "object",
        "properties": {
          "d": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "d"
              ]
            }
          }
        },
        "summary": "D language support",
        "see": {
          "Building a D Project": "https://docs.travis-ci.com/user/languages/d/"
        },
        "normal": true
      },
      "dart": {
        "$id": "dart",
        "title": "Dart",
        "type": "object",
        "properties": {
          "dart": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "dart"
              ]
            }
          },
          "dart_task": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "test": {
                          "type": "string"
                        },
                        "dartanalyzer": {
                          "type": "string"
                        },
                        "dartfmt": {
                          "type": "boolean"
                        },
                        "install_dartium": {
                          "type": "boolean"
                        },
                        "xvfb": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "normal": true
              },
              {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string"
                  },
                  "dartanalyzer": {
                    "type": "string"
                  },
                  "dartfmt": {
                    "type": "boolean"
                  },
                  "install_dartium": {
                    "type": "boolean"
                  },
                  "xvfb": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "string"
              }
            ],
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "dart"
              ]
            }
          },
          "with_content_shell": {
            "type": "boolean",
            "only": {
              "language": [
                "dart"
              ]
            }
          }
        },
        "summary": "Dart language support",
        "see": {
          "Building a Dart Project": "https://docs.travis-ci.com/user/languages/dart/"
        },
        "normal": true
      },
      "elixir": {
        "$id": "elixir",
        "title": "Elixir",
        "type": "object",
        "properties": {
          "elixir": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "elixir"
              ]
            }
          },
          "otp_release": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "elixir"
              ]
            }
          }
        },
        "summary": "Elixir language support",
        "see": {
          "Building an Elixir Project": "https://docs.travis-ci.com/user/languages/elixir/"
        },
        "normal": true
      },
      "elm": {
        "$id": "elm",
        "title": "Elm",
        "type": "object",
        "properties": {
          "elm": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "node_js": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "elm_format": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "elm_test": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          }
        },
        "summary": "Elm language support",
        "see": {
          "Building an Elm Project": "https://docs.travis-ci.com/user/languages/elm/"
        },
        "normal": true
      },
      "erlang": {
        "$id": "erlang",
        "title": "Erlang",
        "type": "object",
        "properties": {
          "otp_release": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "erlang"
              ]
            }
          }
        },
        "summary": "Erlang language support",
        "see": {
          "Building an Erlang Project": "https://docs.travis-ci.com/user/languages/erlang/"
        },
        "normal": true
      },
      "generic": {
        "$id": "generic",
        "title": "Generic",
        "type": "object",
        "summary": "Generic language support",
        "see": {
          "Minimal and Generic images": "https://docs.travis-ci.com/user/languages/minimal-and-generic/"
        },
        "normal": true
      },
      "go": {
        "$id": "go",
        "title": "Go",
        "type": "object",
        "properties": {
          "go": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "gobuild_args": {
            "type": "string",
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "go_import_path": {
            "type": "string",
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "gimme_config": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "force_reinstall": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "go"
              ]
            }
          }
        },
        "summary": "Go language support",
        "see": {
          "Building a Go Project": "https://docs.travis-ci.com/user/languages/go/"
        },
        "normal": true
      },
      "groovy": {
        "$id": "groovy",
        "title": "Groovy",
        "type": "object",
        "properties": {
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "groovy"
              ]
            }
          }
        },
        "summary": "Groovy language support",
        "see": {
          "Building a Groovy Project": "https://docs.travis-ci.com/user/languages/groovy/"
        },
        "normal": true
      },
      "hack": {
        "$id": "hack",
        "title": "Hack",
        "type": "object",
        "properties": {
          "hhvm": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "hack"
              ]
            }
          },
          "php": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "hack"
              ]
            }
          }
        },
        "summary": "Hack support",
        "normal": true
      },
      "haskell": {
        "$id": "haskell",
        "title": "Haskell",
        "type": "object",
        "properties": {
          "ghc": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "haskell"
              ]
            }
          }
        },
        "summary": "Haskell language support",
        "see": {
          "Building a Haskell Project": "https://docs.travis-ci.com/user/languages/haskell/"
        },
        "normal": true
      },
      "haxe": {
        "$id": "haxe",
        "title": "Haxe",
        "type": "object",
        "properties": {
          "haxe": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "haxe"
              ]
            }
          },
          "hxml": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "haxe"
              ]
            }
          },
          "neko": {
            "type": "string",
            "only": {
              "language": [
                "haxe"
              ]
            }
          }
        },
        "summary": "Haxe language support",
        "see": {
          "Building a Haxe Project": "https://docs.travis-ci.com/user/languages/haxe/"
        },
        "normal": true
      },
      "java": {
        "$id": "java",
        "title": "Java",
        "type": "object",
        "properties": {
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "java"
              ]
            }
          }
        },
        "summary": "Java language support",
        "see": {
          "Building a Java Project": "https://docs.travis-ci.com/user/languages/java/"
        },
        "normal": true
      },
      "julia": {
        "$id": "julia",
        "title": "Julia",
        "type": "object",
        "properties": {
          "julia": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "julia"
              ]
            }
          }
        },
        "summary": "Julia language support",
        "see": {
          "Building a Julia Project": "https://docs.travis-ci.com/user/languages/julia/"
        },
        "normal": true
      },
      "matlab": {
        "$id": "matlab",
        "title": "Matlab",
        "type": "object",
        "properties": {
          "matlab": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "matlab"
              ]
            }
          }
        },
        "summary": "Matlab build support",
        "see": {
          "Building a MATLAB Project": "https://docs.travis-ci.com/user/languages/matlab/"
        },
        "normal": true
      },
      "nix": {
        "$id": "nix",
        "title": "Nix",
        "type": "object",
        "properties": {
          "nix": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "nix"
              ]
            }
          }
        },
        "summary": "Nix support",
        "see": {
          "Building a Nix Project": "https://docs.travis-ci.com/user/languages/nix/"
        },
        "normal": true
      },
      "node_js": {
        "$id": "node_js",
        "title": "Javascript",
        "type": "object",
        "properties": {
          "node_js": {
            "$ref": "#/definitions/type/strs",
            "aliases": [
              "node"
            ],
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "node_js"
              ]
            }
          },
          "npm_args": {
            "type": "string",
            "only": {
              "language": [
                "node_js"
              ]
            }
          }
        },
        "summary": "Javascript language support",
        "see": {
          "Building a Javascript Project": "https://docs.travis-ci.com/user/languages/javascript/"
        },
        "normal": true
      },
      "objective-c": {
        "$id": "objective-c",
        "title": "Objective-C",
        "type": "object",
        "properties": {
          "rvm": {
            "$ref": "#/definitions/type/strs",
            "aliases": [
              "ruby",
              "rbenv"
            ],
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "gemfile": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_scheme": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_sdk": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "podfile": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "bundler_args": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_destination": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_project": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_workspace": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xctool_args": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          }
        },
        "summary": "Objective-C language support",
        "see": {
          "Building an Objective-C Project": "https://docs.travis-ci.com/user/languages/objective-c/"
        },
        "normal": true
      },
      "perl": {
        "$id": "perl",
        "title": "Perl",
        "type": "object",
        "properties": {
          "perl": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "perl"
              ]
            }
          }
        },
        "summary": "Perl language support",
        "see": {
          "Building a Perl Project": "https://docs.travis-ci.com/user/languages/perl/"
        },
        "normal": true
      },
      "perl6": {
        "$id": "perl6",
        "title": "Perl 6",
        "type": "object",
        "properties": {
          "perl6": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "perl6"
              ]
            }
          }
        },
        "summary": "Perl 6 language support",
        "see": {
          "Building a Perl 6 Project": "https://docs.travis-ci.com/user/languages/perl6/"
        },
        "normal": true
      },
      "php": {
        "$id": "php",
        "title": "PHP",
        "type": "object",
        "properties": {
          "php": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "php"
              ]
            }
          },
          "composer_args": {
            "type": "string",
            "only": {
              "language": [
                "php"
              ]
            }
          }
        },
        "summary": "PHP language support",
        "see": {
          "Building a PHP Project": "https://docs.travis-ci.com/user/languages/php/"
        },
        "normal": true
      },
      "python": {
        "$id": "python",
        "title": "Python",
        "type": "object",
        "properties": {
          "python": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "python"
              ]
            }
          },
          "virtualenv": {
            "type": "object",
            "properties": {
              "system_site_packages": {
                "type": "boolean"
              }
            },
            "aliases": [
              "virtual_env"
            ],
            "only": {
              "language": [
                "python"
              ]
            }
          }
        },
        "summary": "Python language support",
        "see": {
          "Building a Python Project": "https://docs.travis-ci.com/user/languages/python/"
        },
        "normal": true
      },
      "r": {
        "$id": "r",
        "title": "R",
        "type": "object",
        "properties": {
          "r": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_binary_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_github_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "apt_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "brew_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_check": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_required": {
            "type": "boolean",
            "aliases": [
              "use_bioc"
            ],
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_use_devel": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "cran": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "disable_homebrew": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "latex": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "pandoc": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "pandoc_version": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_build_args": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_check_args": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_check_revdep": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "warnings_are_errors": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "remotes": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "repos": {
            "type": "object",
            "only": {
              "language": [
                "r"
              ]
            }
          }
        },
        "summary": "R language support",
        "see": {
          "Building an R Project": "https://docs.travis-ci.com/user/languages/clojure/"
        },
        "normal": true
      },
      "ruby": {
        "$id": "ruby",
        "title": "Ruby",
        "type": "object",
        "properties": {
          "rvm": {
            "$ref": "#/definitions/type/strs",
            "aliases": [
              "ruby",
              "rbenv"
            ],
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "gemfile": {
            "$ref": "#/definitions/type/strs",
            "aliases": [
              "gemfiles"
            ],
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "bundler_args": {
            "type": "string",
            "only": {
              "language": [
                "ruby"
              ]
            }
          }
        },
        "summary": "Ruby language support",
        "see": {
          "Building a Ruby Project": "https://docs.travis-ci.com/user/languages/ruby/"
        },
        "normal": true
      },
      "rust": {
        "$id": "rust",
        "title": "Rust",
        "type": "object",
        "properties": {
          "rust": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "rust"
              ]
            }
          }
        },
        "summary": "Rust language support",
        "see": {
          "Building a Rust Project": "https://docs.travis-ci.com/user/languages/rust/"
        },
        "normal": true
      },
      "scala": {
        "$id": "scala",
        "title": "Scala",
        "type": "object",
        "properties": {
          "scala": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "scala"
              ]
            }
          },
          "jdk": {
            "$ref": "#/definitions/type/jdks",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "scala"
              ]
            }
          },
          "sbt_args": {
            "type": "string",
            "only": {
              "language": [
                "scala"
              ]
            }
          }
        },
        "summary": "Scala language support",
        "see": {
          "Building a Scala Project": "https://docs.travis-ci.com/user/languages/scala/"
        },
        "normal": true
      },
      "shell": {
        "$id": "shell",
        "title": "Shell",
        "type": "object",
        "summary": "Shell language support",
        "see": {
          "Minimal and Generic images": "https://docs.travis-ci.com/user/languages/minimal-and-generic/"
        },
        "normal": true
      },
      "smalltalk": {
        "$id": "smalltalk",
        "title": "Smalltalk",
        "type": "object",
        "properties": {
          "smalltalk": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_config": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_vm": {
            "$ref": "#/definitions/type/strs",
            "flags": [
              "expand"
            ],
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_edge": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          }
        },
        "summary": "Smalltalk language support",
        "see": {
          "Building a Smalltalk Project": "https://docs.travis-ci.com/user/languages/smalltalk/"
        },
        "normal": true
      }
    },
    "support": {
      "__amethyst___support": {
        "$id": "__amethyst___support",
        "title": "Amethyst Support",
        "type": "object",
        "normal": true
      },
      "__connie___support": {
        "$id": "__connie___support",
        "title": "Connie Support",
        "type": "object",
        "normal": true
      },
      "__cookiecat___support": {
        "$id": "__cookiecat___support",
        "title": "Cookiecat Support",
        "type": "object",
        "normal": true
      },
      "__garnet___support": {
        "$id": "__garnet___support",
        "title": "Garnet Support",
        "type": "object",
        "normal": true
      },
      "__onion___support": {
        "$id": "__onion___support",
        "title": "Onion Support",
        "type": "object",
        "normal": true
      },
      "__opal___support": {
        "$id": "__opal___support",
        "title": "Opal Support",
        "type": "object",
        "normal": true
      },
      "__sardonyx___support": {
        "$id": "__sardonyx___support",
        "title": "Sardonyx Support",
        "type": "object",
        "normal": true
      },
      "__stevonnie___support": {
        "$id": "__stevonnie___support",
        "title": "Stevonnie Support",
        "type": "object",
        "normal": true
      },
      "android_support": {
        "$id": "android_support",
        "title": "Android Support",
        "type": "object",
        "properties": {
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "android"
              ]
            }
          },
          "android": {
            "type": "object",
            "properties": {
              "components": {
                "$ref": "#/definitions/type/strs",
                "summary": "Android components to use"
              },
              "licenses": {
                "$ref": "#/definitions/type/strs",
                "summary": "Android licenses to use"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "android"
              ]
            }
          }
        },
        "normal": true
      },
      "c_support": {
        "$id": "c_support",
        "title": "C Support",
        "type": "object",
        "normal": true
      },
      "clojure_support": {
        "$id": "clojure_support",
        "title": "Clojure Support",
        "type": "object",
        "properties": {
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "clojure"
              ]
            }
          },
          "lein": {
            "type": "string",
            "only": {
              "language": [
                "clojure"
              ]
            }
          }
        },
        "normal": true
      },
      "cpp_support": {
        "$id": "cpp_support",
        "title": "Cpp Support",
        "type": "object",
        "normal": true
      },
      "crystal_support": {
        "$id": "crystal_support",
        "title": "Crystal Support",
        "type": "object",
        "properties": {
          "crystal": {
            "type": "string",
            "only": {
              "language": [
                "crystal"
              ]
            }
          }
        },
        "normal": true
      },
      "csharp_support": {
        "$id": "csharp_support",
        "title": "Csharp Support",
        "type": "object",
        "properties": {
          "dotnet": {
            "type": "string",
            "only": {
              "language": [
                "csharp"
              ]
            }
          },
          "mono": {
            "type": "string",
            "only": {
              "language": [
                "csharp"
              ]
            }
          },
          "solution": {
            "type": "string",
            "only": {
              "language": [
                "csharp"
              ]
            }
          }
        },
        "normal": true
      },
      "d_support": {
        "$id": "d_support",
        "title": "D Support",
        "type": "object",
        "properties": {
          "d": {
            "type": "string",
            "only": {
              "language": [
                "d"
              ]
            }
          }
        },
        "normal": true
      },
      "dart_support": {
        "$id": "dart_support",
        "title": "Dart Support",
        "type": "object",
        "properties": {
          "dart": {
            "type": "string",
            "only": {
              "language": [
                "dart"
              ]
            }
          },
          "dart_task": {
            "type": "object",
            "properties": {
              "test": {
                "type": "string"
              },
              "dartanalyzer": {
                "type": "string"
              },
              "dartfmt": {
                "type": "boolean"
              },
              "install_dartium": {
                "type": "boolean"
              },
              "xvfb": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "dart"
              ]
            }
          },
          "with_content_shell": {
            "type": "boolean",
            "only": {
              "language": [
                "dart"
              ]
            }
          }
        },
        "normal": true
      },
      "elixir_support": {
        "$id": "elixir_support",
        "title": "Elixir Support",
        "type": "object",
        "properties": {
          "elixir": {
            "type": "string",
            "only": {
              "language": [
                "elixir"
              ]
            }
          },
          "otp_release": {
            "type": "string",
            "only": {
              "language": [
                "elixir"
              ]
            }
          }
        },
        "normal": true
      },
      "elm_support": {
        "$id": "elm_support",
        "title": "Elm Support",
        "type": "object",
        "properties": {
          "elm": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "node_js": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "elm_format": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          },
          "elm_test": {
            "type": "string",
            "only": {
              "language": [
                "elm"
              ]
            }
          }
        },
        "normal": true
      },
      "erlang_support": {
        "$id": "erlang_support",
        "title": "Erlang Support",
        "type": "object",
        "properties": {
          "otp_release": {
            "type": "string",
            "only": {
              "language": [
                "erlang"
              ]
            }
          }
        },
        "normal": true
      },
      "generic_support": {
        "$id": "generic_support",
        "title": "Generic Support",
        "type": "object",
        "normal": true
      },
      "go_support": {
        "$id": "go_support",
        "title": "Go Support",
        "type": "object",
        "properties": {
          "go": {
            "type": "string",
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "gobuild_args": {
            "type": "string",
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "go_import_path": {
            "type": "string",
            "only": {
              "language": [
                "go"
              ]
            }
          },
          "gimme_config": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "force_reinstall": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "go"
              ]
            }
          }
        },
        "normal": true
      },
      "groovy_support": {
        "$id": "groovy_support",
        "title": "Groovy Support",
        "type": "object",
        "properties": {
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "groovy"
              ]
            }
          }
        },
        "normal": true
      },
      "hack_support": {
        "$id": "hack_support",
        "title": "Hack Support",
        "type": "object",
        "properties": {
          "hhvm": {
            "type": "string",
            "only": {
              "language": [
                "hack"
              ]
            }
          },
          "php": {
            "type": "string",
            "only": {
              "language": [
                "hack"
              ]
            }
          }
        },
        "normal": true
      },
      "haskell_support": {
        "$id": "haskell_support",
        "title": "Haskell Support",
        "type": "object",
        "properties": {
          "ghc": {
            "type": "string",
            "only": {
              "language": [
                "haskell"
              ]
            }
          }
        },
        "normal": true
      },
      "haxe_support": {
        "$id": "haxe_support",
        "title": "Haxe Support",
        "type": "object",
        "properties": {
          "haxe": {
            "type": "string",
            "only": {
              "language": [
                "haxe"
              ]
            }
          },
          "hxml": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "haxe"
              ]
            }
          },
          "neko": {
            "type": "string",
            "only": {
              "language": [
                "haxe"
              ]
            }
          }
        },
        "normal": true
      },
      "java_support": {
        "$id": "java_support",
        "title": "Java Support",
        "type": "object",
        "properties": {
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "java"
              ]
            }
          }
        },
        "normal": true
      },
      "julia_support": {
        "$id": "julia_support",
        "title": "Julia Support",
        "type": "object",
        "properties": {
          "julia": {
            "type": "string",
            "only": {
              "language": [
                "julia"
              ]
            }
          }
        },
        "normal": true
      },
      "matlab_support": {
        "$id": "matlab_support",
        "title": "Matlab Support",
        "type": "object",
        "properties": {
          "matlab": {
            "type": "string",
            "only": {
              "language": [
                "matlab"
              ]
            }
          }
        },
        "normal": true
      },
      "nix_support": {
        "$id": "nix_support",
        "title": "Nix Support",
        "type": "object",
        "properties": {
          "nix": {
            "type": "string",
            "only": {
              "language": [
                "nix"
              ]
            }
          }
        },
        "normal": true
      },
      "node_js_support": {
        "$id": "node_js_support",
        "title": "Node Js Support",
        "type": "object",
        "properties": {
          "node_js": {
            "type": "string",
            "aliases": [
              "node"
            ],
            "only": {
              "language": [
                "node_js"
              ]
            }
          },
          "npm_args": {
            "type": "string",
            "only": {
              "language": [
                "node_js"
              ]
            }
          }
        },
        "normal": true
      },
      "objective-c_support": {
        "$id": "objective-c_support",
        "title": "Objective C Support",
        "type": "object",
        "properties": {
          "rvm": {
            "type": "string",
            "aliases": [
              "ruby",
              "rbenv"
            ],
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "gemfile": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_scheme": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_sdk": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "podfile": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "bundler_args": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_destination": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_project": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xcode_workspace": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          },
          "xctool_args": {
            "type": "string",
            "only": {
              "language": [
                "objective-c"
              ]
            }
          }
        },
        "normal": true
      },
      "perl6_support": {
        "$id": "perl6_support",
        "title": "Perl6 Support",
        "type": "object",
        "properties": {
          "perl6": {
            "type": "string",
            "only": {
              "language": [
                "perl6"
              ]
            }
          }
        },
        "normal": true
      },
      "perl_support": {
        "$id": "perl_support",
        "title": "Perl Support",
        "type": "object",
        "properties": {
          "perl": {
            "type": "string",
            "only": {
              "language": [
                "perl"
              ]
            }
          }
        },
        "normal": true
      },
      "php_support": {
        "$id": "php_support",
        "title": "Php Support",
        "type": "object",
        "properties": {
          "php": {
            "type": "string",
            "only": {
              "language": [
                "php"
              ]
            }
          },
          "composer_args": {
            "type": "string",
            "only": {
              "language": [
                "php"
              ]
            }
          }
        },
        "normal": true
      },
      "python_support": {
        "$id": "python_support",
        "title": "Python Support",
        "type": "object",
        "properties": {
          "python": {
            "type": "string",
            "only": {
              "language": [
                "python"
              ]
            }
          },
          "virtualenv": {
            "type": "object",
            "properties": {
              "system_site_packages": {
                "type": "boolean"
              }
            },
            "aliases": [
              "virtual_env"
            ],
            "only": {
              "language": [
                "python"
              ]
            }
          }
        },
        "normal": true
      },
      "r_support": {
        "$id": "r_support",
        "title": "R Support",
        "type": "object",
        "properties": {
          "r": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_binary_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_github_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "apt_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "brew_packages": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_check": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_required": {
            "type": "boolean",
            "aliases": [
              "use_bioc"
            ],
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "bioc_use_devel": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "cran": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "disable_homebrew": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "latex": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "pandoc": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "pandoc_version": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_build_args": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_check_args": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "r_check_revdep": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "warnings_are_errors": {
            "type": "boolean",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "remotes": {
            "type": "string",
            "only": {
              "language": [
                "r"
              ]
            }
          },
          "repos": {
            "type": "object",
            "only": {
              "language": [
                "r"
              ]
            }
          }
        },
        "normal": true
      },
      "ruby_support": {
        "$id": "ruby_support",
        "title": "Ruby Support",
        "type": "object",
        "properties": {
          "rvm": {
            "type": "string",
            "aliases": [
              "ruby",
              "rbenv"
            ],
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "gemfile": {
            "type": "string",
            "aliases": [
              "gemfiles"
            ],
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "ruby"
              ]
            }
          },
          "bundler_args": {
            "type": "string",
            "only": {
              "language": [
                "ruby"
              ]
            }
          }
        },
        "normal": true
      },
      "rust_support": {
        "$id": "rust_support",
        "title": "Rust Support",
        "type": "object",
        "properties": {
          "rust": {
            "type": "string",
            "only": {
              "language": [
                "rust"
              ]
            }
          }
        },
        "normal": true
      },
      "scala_support": {
        "$id": "scala_support",
        "title": "Scala Support",
        "type": "object",
        "properties": {
          "scala": {
            "type": "string",
            "only": {
              "language": [
                "scala"
              ]
            }
          },
          "jdk": {
            "type": "string",
            "only": {
              "language": [
                "scala"
              ]
            }
          },
          "sbt_args": {
            "type": "string",
            "only": {
              "language": [
                "scala"
              ]
            }
          }
        },
        "normal": true
      },
      "shell_support": {
        "$id": "shell_support",
        "title": "Shell Support",
        "type": "object",
        "normal": true
      },
      "smalltalk_support": {
        "$id": "smalltalk_support",
        "title": "Smalltalk Support",
        "type": "object",
        "properties": {
          "smalltalk": {
            "type": "string",
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_config": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_vm": {
            "$ref": "#/definitions/type/strs",
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          },
          "smalltalk_edge": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "only": {
              "language": [
                "smalltalk"
              ]
            }
          }
        },
        "normal": true
      }
    },
    "notification": {
      "campfire": {
        "$id": "campfire",
        "title": "Campfire",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "rooms": {
                "$ref": "#/definitions/type/secures",
                "summary": "Campfire rooms to notify"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "rooms"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/secures"
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Campfire notifications": "https://docs.travis-ci.com/user/notifications/#configuring-campfire-notifications"
        },
        "normal": true
      },
      "email": {
        "$id": "email",
        "title": "Email",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "recipients": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/type/secure",
                      "strict": false
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/type/secure",
                    "strict": false
                  }
                ],
                "summary": "Email addresses to notify"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "aliases": [
              "emails"
            ],
            "prefix": {
              "key": "recipients"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/secure",
              "strict": false
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/secure",
            "strict": false
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Email notifications": "https://docs.travis-ci.com/user/notifications/#configuring-email-notifications"
        },
        "normal": true
      },
      "flowdock": {
        "$id": "flowdock",
        "title": "Flowdock",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_token": {
                "$ref": "#/definitions/type/secure",
                "summary": "Flowdock API token"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "api_token"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/secure"
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Flowdock notifications": "https://docs.travis-ci.com/user/notifications/#configuring-flowdock-notifications"
        },
        "normal": true
      },
      "frequency": {
        "$id": "frequency",
        "title": "Frequency",
        "type": "string",
        "summary": "Notification frequency",
        "enum": [
          "always",
          "never",
          "change"
        ],
        "values": {
          "always": {
            "aliases": [
              "true"
            ]
          },
          "never": {
            "aliases": [
              "false"
            ]
          },
          "change": {
            "aliases": [
              "changed"
            ]
          }
        }
      },
      "hipchat": {
        "$id": "hipchat",
        "title": "Hipchat",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "rooms": {
                "$ref": "#/definitions/type/secures",
                "summary": "Hipchat rooms to notify (needs to include the API token)"
              },
              "format": {
                "type": "string",
                "enum": [
                  "html",
                  "text"
                ],
                "summary": "Format to use for the notication"
              },
              "notify": {
                "type": "boolean",
                "summary": "Whether to trigger a user notification (using v2)"
              },
              "on_pull_requests": {
                "type": "boolean",
                "summary": "Whether to notify on pull requests"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "rooms"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/secures"
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Hipchat notifications": "https://docs.travis-ci.com/user/notifications/#configuring-hipchat-notifications"
        },
        "normal": true
      },
      "irc": {
        "$id": "irc",
        "title": "IRC",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "channels": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/type/secure",
                      "strict": false
                    },
                    "aliases": [
                      "channel"
                    ],
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/type/secure",
                    "strict": false
                  }
                ],
                "summary": "IRC channels to notify"
              },
              "channel_key": {
                "$ref": "#/definitions/type/secure",
                "summary": "IRC channel key (password)"
              },
              "password": {
                "$ref": "#/definitions/type/secure",
                "summary": "IRC user password"
              },
              "nickserv_password": {
                "$ref": "#/definitions/type/secure",
                "summary": "IRC nickserv password"
              },
              "nick": {
                "$ref": "#/definitions/type/secure",
                "strict": false,
                "summary": "IRC Nick name"
              },
              "use_notice": {
                "type": "boolean",
                "summary": "Whether to use notices instead of regular messages"
              },
              "skip_join": {
                "type": "boolean",
                "summary": "Whether to skip joining the channel"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "channels"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/secure",
              "strict": false
            },
            "aliases": [
              "channel"
            ],
            "normal": true
          },
          {
            "$ref": "#/definitions/type/secure",
            "strict": false
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring IRC notifications": "https://docs.travis-ci.com/user/notifications/#configuring-irc-notifications"
        },
        "normal": true
      },
      "pushover": {
        "$id": "pushover",
        "title": "Pushover",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "api_key": {
                "$ref": "#/definitions/type/secures",
                "summary": "Pushover API key"
              },
              "users": {
                "$ref": "#/definitions/type/secures",
                "summary": "Pushover users"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Pushover notifications": "https://docs.travis-ci.com/user/notifications/#configuring-pushover-notifications"
        },
        "normal": true
      },
      "slack": {
        "$id": "slack",
        "title": "Slack",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "rooms": {
                "$ref": "#/definitions/type/secures",
                "summary": "Slack channels to notify"
              },
              "template": {
                "$ref": "#/definitions/notification/templates"
              },
              "on_pull_requests": {
                "type": "boolean",
                "summary": "Whether to notify on pull requests"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "prefix": {
              "key": "rooms"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "$ref": "#/definitions/type/secures"
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Slack notifications": "https://docs.travis-ci.com/user/notifications/#configuring-slack-notifications"
        },
        "normal": true
      },
      "template": {
        "$id": "template",
        "title": "Template",
        "type": "string",
        "vars": [
          "repository",
          "repository_slug",
          "repository_name",
          "build_number",
          "build_id",
          "build_url",
          "branch",
          "commit",
          "commit_subject",
          "commit_message",
          "author",
          "pull_request",
          "pull_request_number",
          "pull_request_url",
          "compare_url",
          "result",
          "duration",
          "elapsed_time",
          "message"
        ]
      },
      "templates": {
        "$id": "templates",
        "title": "Templates",
        "anyOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/notification/template"
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/notification/template"
          }
        ],
        "summary": "Templates to use for the notification message"
      },
      "webhooks": {
        "$id": "webhooks",
        "title": "Webhooks",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "urls": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/type/secure",
                      "strict": false
                    },
                    "normal": true
                  },
                  {
                    "$ref": "#/definitions/type/secure",
                    "strict": false
                  }
                ],
                "summary": "Webhook URLs to notify"
              },
              "on_start": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_cancel": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_error": {
                "$ref": "#/definitions/notification/frequency"
              },
              "if": {
                "$ref": "#/definitions/type/condition"
              },
              "on_success": {
                "$ref": "#/definitions/notification/frequency"
              },
              "on_failure": {
                "$ref": "#/definitions/notification/frequency"
              },
              "enabled": {
                "type": "boolean",
                "summary": "Whether to enable these notifications"
              },
              "disabled": {
                "type": "boolean",
                "summary": "Whether to disable these notifications"
              }
            },
            "additionalProperties": false,
            "aliases": [
              "webhook"
            ],
            "prefix": {
              "key": "urls"
            },
            "normal": true,
            "changes": [
              {
                "change": "enable"
              }
            ]
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/type/secure",
              "strict": false
            },
            "normal": true
          },
          {
            "$ref": "#/definitions/type/secure",
            "strict": false
          },
          {
            "type": "boolean"
          }
        ],
        "see": {
          "Configuring Webhook notifications": "https://docs.travis-ci.com/user/notifications/#configuring-webhook-notifications"
        },
        "normal": true
      }
    }
  },
  "expand": [
    "os",
    "arch",
    "compiler",
    "osx_image",
    "jobs",
    "jdk",
    "crystal",
    "dotnet",
    "mono",
    "solution",
    "d",
    "dart",
    "dart_task",
    "elixir",
    "otp_release",
    "elm",
    "node_js",
    "go",
    "hhvm",
    "php",
    "ghc",
    "haxe",
    "julia",
    "matlab",
    "nix",
    "perl",
    "perl6",
    "python",
    "r",
    "rvm",
    "gemfile",
    "xcode_scheme",
    "xcode_sdk",
    "rust",
    "scala",
    "smalltalk",
    "smalltalk_config",
    "smalltalk_vm"
  ]
}